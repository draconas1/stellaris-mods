namespace = giga_birch

country_event = {
	id = giga_birch.001
	hide_window = yes
	fire_only_once = yes
	is_triggered_only = yes
	trigger = {
		has_origin = origin_birch
		is_ai = no
	}

	immediate = {
		set_global_flag = birch_black_hole_occured
		set_country_flag = found_giga_black_hole

		# Tag our old home planet
		capital_scope = {
			save_event_target_as = previous_home_planet
			solar_system = { save_event_target_as = previous_home_system }
			if = {
				limit = { exists = sector }
				sector = {
					leader = {
						unassign_leader = this
						save_event_target_as = birch_gov
					}
				}
			}
			else = {
				root = {
					random_owned_leader = {
						limit = { leader_class = governor }
						save_event_target_as = birch_gov
					}
				}
			}
		}

		# Spawn the Birch World System
		no_scope = {
			set_spawn_system_batch = begin
			spawn_system = { min_distance >= 0.0001  max_distance <= 0.0001	min_orientation_angle = 44  max_orientation_angle = 46  initializer = giga_black_hole_core_initializer	hyperlane = no }
			last_created_system = { set_name = event_target:previous_home_system }
			event_target:giga_core_system = {
				spawn_system = { min_distance >= 15	max_distance <= 15	min_orientation_angle = 90	max_orientation_angle = 90	initializer = "giga_inner_1_initializer"	hyperlane = no }
				spawn_system = { min_distance >= 15	max_distance <= 15	min_orientation_angle = 150	max_orientation_angle = 150	initializer = "giga_inner_2_initializer_override"	hyperlane = no }
				spawn_system = { min_distance >= 15	max_distance <= 15	min_orientation_angle = 210	max_orientation_angle = 210	initializer = "giga_inner_3_initializer_override"	hyperlane = no }
				spawn_system = { min_distance >= 15	max_distance <= 15	min_orientation_angle = 270	max_orientation_angle = 270	initializer = "giga_inner_4_initializer"	hyperlane = no }
				spawn_system = { min_distance >= 15	max_distance <= 15	min_orientation_angle = 330	max_orientation_angle = 330	initializer = "giga_inner_5_initializer"	hyperlane = no }
				spawn_system = { min_distance >= 15	max_distance <= 15	min_orientation_angle = 30	max_orientation_angle = 30	initializer = "giga_inner_6_initializer_override"	hyperlane = no }

				spawn_system = { min_distance >= 55	max_distance <= 55	min_orientation_angle = 90	max_orientation_angle = 90	initializer = "giga_outer_1_initializer_override"	hyperlane = no }
				spawn_system = { min_distance >= 55	max_distance <= 55	min_orientation_angle = 210	max_orientation_angle = 210	initializer = "giga_outer_2_initializer_override"	hyperlane = no }
				spawn_system = { min_distance >= 55	max_distance <= 55	min_orientation_angle = 330	max_orientation_angle = 330	initializer = "giga_outer_3_initializer_override"	hyperlane = no }
				#Inner hexagon lanes
				add_hyperlane_safe = { from = event_target:giga_core_system	to = event_target:giga_inner_1 }
				add_hyperlane_safe = { from = event_target:giga_core_system	to = event_target:giga_inner_2 }
				add_hyperlane_safe = { from = event_target:giga_core_system	to = event_target:giga_inner_3 }
				add_hyperlane_safe = { from = event_target:giga_core_system	to = event_target:giga_inner_4 }
				add_hyperlane_safe = { from = event_target:giga_core_system	to = event_target:giga_inner_5 }
				add_hyperlane_safe = { from = event_target:giga_core_system	to = event_target:giga_inner_6 }

				add_hyperlane_safe = { from = event_target:giga_inner_1		to = event_target:giga_inner_2 }
				add_hyperlane_safe = { from = event_target:giga_inner_2		to = event_target:giga_inner_3 }
				add_hyperlane_safe = { from = event_target:giga_inner_3		to = event_target:giga_inner_4 }
				add_hyperlane_safe = { from = event_target:giga_inner_4		to = event_target:giga_inner_5 }
				add_hyperlane_safe = { from = event_target:giga_inner_5		to = event_target:giga_inner_6 }
				add_hyperlane_safe = { from = event_target:giga_inner_6		to = event_target:giga_inner_1 }

				add_hyperlane_safe = { from = event_target:giga_inner_1		to = event_target:giga_outer_1 }
				add_hyperlane_safe = { from = event_target:giga_inner_3		to = event_target:giga_outer_2 }
				add_hyperlane_safe = { from = event_target:giga_inner_5		to = event_target:giga_outer_3 }
				#Outer systems connect to allow going around the hexagon
				add_hyperlane_safe = { from = event_target:giga_outer_1		to = event_target:giga_outer_2 }
				add_hyperlane_safe = { from = event_target:giga_outer_2		to = event_target:giga_outer_3 }
				add_hyperlane_safe = { from = event_target:giga_outer_3		to = event_target:giga_outer_1 }
			}			
			set_spawn_system_batch = end

			# spawn guard critters
			create_country = {
				name = giga_birch_origin_critters
				type = faction

				flag = {
					icon = {
						category = spherical
						file = flag_spherical_7.dds
					}
					background= {
						category = backgrounds
						file = circle.dds
					}
					colors={
						"black"
						"dark_grey"
						"null"
						"null"
					}
				}
			}
			last_created_country = {
				add_modifier = {
					modifier = giga_birch_origin_critter_balance
				}

				create_fleet = {
					name = giga_birch_origin_critters_fleet
					settings = { spawn_debris = no }
					effect = {
						create_ship = { design = NAME_Surplus_Gamma name = giga_birch_origin_critters_ship graphical_culture = fallen_empire_03 }
						create_ship = { design = NAME_Surplus_Gamma name = giga_birch_origin_critters_ship graphical_culture = fallen_empire_03 }
						create_ship = { design = NAME_Surplus_Gamma name = giga_birch_origin_critters_ship graphical_culture = fallen_empire_03 }
						create_ship = { design = NAME_Surplus_Gamma name = giga_birch_origin_critters_ship graphical_culture = fallen_empire_03 }
						set_fleet_stance = aggressive
						set_owner = prev
						set_location = event_target:giga_outer_1.star
					}
				}

				create_fleet = {
					name = giga_birch_origin_critters_fleet
					settings = { spawn_debris = no }
					effect = {
						create_ship = { design = NAME_Surplus_Gamma name = giga_birch_origin_critters_ship graphical_culture = fallen_empire_03 }
						create_ship = { design = NAME_Surplus_Gamma name = giga_birch_origin_critters_ship graphical_culture = fallen_empire_03 }
						create_ship = { design = NAME_Surplus_Gamma name = giga_birch_origin_critters_ship graphical_culture = fallen_empire_03 }
						create_ship = { design = NAME_Surplus_Gamma name = giga_birch_origin_critters_ship graphical_culture = fallen_empire_03 }
						set_fleet_stance = aggressive
						set_owner = prev
						set_location = event_target:giga_outer_2.star
					}
				}

				create_fleet = {
					name = giga_birch_origin_critters_fleet
					settings = { spawn_debris = no }
					effect = {
						create_ship = { design = NAME_Surplus_Gamma name = giga_birch_origin_critters_ship graphical_culture = fallen_empire_03 }
						create_ship = { design = NAME_Surplus_Gamma name = giga_birch_origin_critters_ship graphical_culture = fallen_empire_03 }
						create_ship = { design = NAME_Surplus_Gamma name = giga_birch_origin_critters_ship graphical_culture = fallen_empire_03 }
						create_ship = { design = NAME_Surplus_Gamma name = giga_birch_origin_critters_ship graphical_culture = fallen_empire_03 }
						set_fleet_stance = aggressive
						set_owner = prev
						set_location = event_target:giga_outer_3.star
					}
				}
			}
		}

		event_target:giga_core_system = {
			set_star_flag = empire_cluster
			set_star_flag = empire_home_system

			star = {
				giga_set_has_mega_flag = yes
				change_planet_size = -10
				remove_deposit = yes
				random_list = {
					1 = { set_name = "Corey's Gut" }
					1 = { set_name = "Time's Agony" }
					1 = { set_name = "Undying Fury" }
					1 = { set_name = "Eternal Horizon" }
					1 = { set_name = "Sagittrevorius A" }
					1 = { set_name = "Pouchkinn's Vortex" }
					1 = { set_name = "The End" }
					1 = { set_name = "Voluptia" }
					1 = { set_name = "Powehi" }
					1 = { set_name = "Centaurus A" }
					1 = { set_name = "Cygnus X-1" }
					1 = { set_name = "Sagittarius A*" }
					1 = { set_name = "TON 618" }
					1 = { set_name = "Steve" }
					1 = { set_name = "Steeve" }
					1 = { set_name = "Sbeve" }
					1 = { set_name = "Twissell" }
					1 = { set_name = "Anulus" }
					1 = { set_name = "Aria" }
					1 = { set_name = "Nero" }
					1 = { set_name = "Temporal Itch" }
					1 = { set_name = "Stellar Beholder" }
					1 = { set_name = "Grim Reaper" }
					1 = { set_name = "dQw4w9WgXcQ" }
					1 = { set_name = "Shatterer of Behemoths" }
					1 = { set_name = "Grand Gargantua" }
					1 = { set_name = "111001" }
					1 = { set_name = "Great Mother" }
					1 = { set_name = "Placeholder black hole, real one is being renovated, apologies for the inconvenience" }
					1 = { set_name = "Despacito" }
					1 = { set_name = "siggatarius A*" }
				}
			}

			spawn_planet = {
				class = pc_origin_birch
				location = solar_system
				orbit_distance_offset = 1
				size = 500
				has_ring = no

				init_effect = {
					save_event_target_as = birch_world
					set_planet_flag = giga_birch_origin_planet_@root
					root = { set_country_flag = giga_birch_origin_planet_@prev }

					set_name = event_target:previous_home_planet
					set_surveyed = { surveyed = yes surveyor = from }
					set_all_comms_surveyed = yes

					# prevent modifiers and events
					set_planet_flag = colony_event
					set_planet_flag = forbid_guillis_planet_modifiers
					set_planet_flag = giga_birch_origin_planet
					set_planet_flag = megastructure

					# deposits

					add_deposit = d_giga_birch_origin_home_insula
					add_deposit = d_giga_birch_origin_home_farms
					add_deposit = d_giga_birch_origin_home_mines
					add_deposit = d_giga_birch_origin_home_generators
					add_deposit = d_giga_birch_origin_home_labs

					if = { 
						limit = { root = { is_machine_empire = yes } }
						add_deposit = d_giga_birch_origin_home_machine_generators
					}
					if = { 
						limit = { root = { 
							or = {
								is_lithoid_empire = yes 
								has_country_flag = lithoid_subspecies
							}
						} }
						add_deposit = d_giga_birch_origin_home_lithoid_mines
					}
					if = { 
						limit = { root = { is_catalytic_empire = yes } }
						add_deposit = d_giga_birch_origin_home_catalytic_farms
					}

					# mechanics
					add_deposit = d_giga_job_size
					add_deposit = d_giga_job_upkeep
					
					# blockers

					if = { 
						limit = { root = { is_lithoid_empire = yes } }
						add_deposit = d_hibernating_lithoids
						add_deposit = d_hibernating_lithoids
						if = {
							limit = { root = { not = { has_civic = civic_hive_devouring_swarm } } }
							add_deposit = d_hibernating_lithoids
							add_deposit = d_hibernating_lithoids
						}
					}

					# stop buildings getting wrecked from removing city districts
					add_modifier = {
						modifier = frameworld_building_wreck_fix 
					}
				}
			}

			# Edge of Eternity is a guaranteed habitable, but it's a bit messed up...
			random_system_planet = {
				limit = { has_planet_flag = edge_of_eternity }

				change_pc = pc_giga_edge_of_eternity
				clear_deposits = yes

				set_planet_flag = colony_event
				set_planet_flag = forbid_guillis_planet_modifiers
				
				add_deposit = d_giga_birch_edge_of_eternity

				add_deposit = d_giga_birch_edge_of_eternity_farms_blocker
				add_deposit = d_giga_birch_edge_of_eternity_farms_blocker
				add_deposit = d_giga_birch_edge_of_eternity_farms_blocker
				add_deposit = d_giga_birch_edge_of_eternity_farms
				add_deposit = d_dangerous_wildlife_blocker
				
				add_deposit = d_giga_birch_edge_of_eternity_generators_blocker
				add_deposit = d_giga_birch_edge_of_eternity_generators
				add_blocker = {
					type = d_massive_glacier
					blocked_deposit = none
				}

				add_deposit = d_giga_birch_edge_of_eternity_mines_blocker
				add_deposit = d_giga_birch_edge_of_eternity_mines
				add_deposit = d_active_volcano
				add_deposit = d_active_volcano

				add_deposit = d_giga_birch_edge_of_eternity_ruins
				add_deposit = d_giga_birch_edge_of_eternity_ruins
			}

			# Add a starbase
			create_starbase = {
				size = "starbase_starport"
				module = "shipyard"
				building = "crew_quarters"
				owner = root
				effect = { save_event_target_as = birch_starbase }
			}
		}

		# set off the exploration situation
		start_situation = {
			type = giga_situation_birch_origin
			target = event_target:birch_world
			effect = {
				save_global_event_target_as = giga_birch_origin_situation_@owner
			}
		}

		# Birch setup
		event_target:birch_world = {
			# own the birch world first
			set_owner = root
			set_controller = root

			# set up buildings etc
			generate_start_buildings_and_districts = yes
			generate_start_pops = yes

			# clear it out down to a single pop of the primary species
			# remove_all_districts = yes
			every_owned_pop = {
				limit = { not = { is_same_species = root.species } }
				kill_pop = yes
			}
			while = {
				limit = {
					num_pops > 1
				}
				random_owned_pop = {
					kill_pop = yes
				}
			}
			
			# now continue with setup
			set_capital = yes
			set_sector_capital = yes
			sector = { assign_leader = event_target:birch_gov }

			while = {
				limit = {
					has_building = building_research_lab_1
				}
				remove_building = building_research_lab_1
				add_district = district_giga_origin_birch_lab
			}

			# no longer needed with the swap back to standard districts
			# Districts
			# while = {
			# 	count = event_target:previous_home_planet.value:giga_num_districts|district|district_city|
			# 	add_district = district_giga_planet_city
			# }
			# while = {
			# 	count = event_target:previous_home_planet.value:giga_num_districts|district|district_hive|
			# 	add_district = district_giga_planet_hive
			# }
			# while = {
			# 	count = event_target:previous_home_planet.value:giga_num_districts|district|district_nexus|
			# 	add_district = district_giga_planet_nexus
			# }

			# while = {
			# 	count = event_target:previous_home_planet.value:giga_num_districts|district|district_industrial|
			# 	add_district = district_industrial
			# }

			# while = {
			# 	count = event_target:previous_home_planet.value:giga_num_districts|district|district_farming|
			# 	add_district = district_giga_planet_farming
			# }
			# while = {
			# 	count = event_target:previous_home_planet.value:giga_num_districts|district|district_mining|
			# 	add_district = district_giga_planet_mining
			# }
			# while = {
			# 	count = event_target:previous_home_planet.value:giga_num_districts|district|district_generator|
			# 	add_district = district_giga_planet_generator
			# }

			generate_home_planet_final_pass = yes

			# clear the anti-building-wreck modifier
			remove_modifier = frameworld_building_wreck_fix
		}

		# Move player ships
		every_owned_fleet = {
			limit = {
				any_owned_ship = {
					OR = {
						is_ship_size = constructor
						is_ship_size = corvette
						is_ship_size = science
					}
				}
			}
			set_location = event_target:birch_starbase
			if = {
				limit = { any_owned_ship = { is_ship_size = corvette } }
				set_home_base = event_target:birch_starbase
			}
			# queue_actions = {
			# 	orbit_planet = event_target:giga_core_system.star
			# }
		}

		# Remove the old home planet
		event_target:previous_home_planet = {
			every_owned_pop = {
				unemploy_pop = yes
				resettle_pop = { pop = this planet = event_target:birch_world }
			}

			set_planet_size = 17
			change_pc = pc_nuked
			destroy_colony = yes
			reroll_planet = yes
			set_name = giga_birch_dummy_system_planet_2
		}

		event_target:birch_world = {
			every_owned_pop = {
				unemploy_pop = yes
				clear_pop_category = yes
			}
			# since it doesn't like to move many pops at the same time sometimes...
			while = {
				count = 40
				check_planet_employment = yes
			}
		}

		# unclaim the old home system
		event_target:previous_home_system = {
			every_fleet_in_system = { delete_fleet = this }
			remove_star_flag = empire_home_system
			remove_star_flag = empire_cluster
			every_neighbor_system = {
				remove_star_flag = empire_cluster
				every_neighbor_system = { remove_star_flag = empire_cluster }
			}
			set_name = giga_birch_dummy_system
		}

		# Set species homeworld
		#owner_species = { set_species_homeworld = event_target:birch_world }
		every_owned_pop_species = { 
			set_species_homeworld = event_target:birch_world
			if = {
				limit = {
					has_trait = trait_pc_continental_preference
				}
				change_species_characteristics = {
					remove_trait = trait_pc_continental_preference
					add_traits_at_start_of_list = yes
					add_trait = trait_pc_birch_preference
				}
			}
		}

		# link the core to outside
		set_spawn_system_batch = begin
		event_target:giga_outer_1 = {
			random_list = {
				1 = { while = { count = 1 giga_generate_hyperlane = yes } }
				1 = { while = { count = 2 giga_generate_hyperlane = yes } }
			}
		}
		event_target:giga_outer_2 = {
			random_list = {
				1 = { while = { count = 1 giga_generate_hyperlane = yes } }
				1 = { while = { count = 2 giga_generate_hyperlane = yes } }
			}
		}
		event_target:giga_outer_3 = {
			random_list = {
				1 = { while = { count = 1 giga_generate_hyperlane = yes } }
				1 = { while = { count = 2 giga_generate_hyperlane = yes } }
			}
		}
		set_spawn_system_batch = end
	}
}



