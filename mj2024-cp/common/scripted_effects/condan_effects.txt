# condan_effects.txt  Contingency Processing Core 1A6F
# Stellaris 2024 ModJam
# Contributors: Draconas

spawn_condan = {
    if = {
        limit = {
            NOT = {
               has_global_flag = condan_system_spawned
            }
        }
        set_global_flag = condan_system_spawned
        spawn_system = {
            initializer = condan_system
        }
    }
    else = {
        log_error = "spawn_condan was invoked when condan_system_spawned flag was already set.  Contingency Processing Core 1A6F can only be spawned once"
    }
}


# country for when condan is playing nice with the player
create_condan_country = {
    create_country = {
        name = NAME_CONDAN
        type = $TYPE$
        name_list = "AI"
        flag = {
            icon= {
                category = "special"
                file = "ai_01.dds"
            }
            background= {
                category = "backgrounds"
                file = "circle.dds"
            }
            colors={
                "black"
                "red"
                "null"
                "null"
            }
        }
        effect = {
            set_country_flag = condan_country
            condan_country_init = yes
        }
    }
}

# country for when condan is at war with the player
create_condan_hostile_country = {
    create_country = {
        name = NAME_CONDAN
        species = event_target:condan_bot # for pops
        ethos = { ethic = ethic_gestalt_consciousness }
        authority = auth_machine_intelligence
        origin = origin_separatists
        civics = {
            civic = civic_machine_terminator
            civic = civic_machine_warbots
        }
        type = $TYPE$
        ignore_initial_colony_error = yes
        day_zero_contact = no
        name_list = "AI"
        flag = {
            icon = {
                category = "special"
                file = "ai_01.dds"
            }
            background = {
                category = "backgrounds"
                file = "circle.dds"
            }
            colors = {
                "black"
                "red"
                "null"
                "null"
            }
        }
        effect = {
            set_country_flag = condan_terminator
            condan_country_init = yes
            create_ship_design = { design = "NAME_AI_STARBASE" }
            add_ship_design = last_created_design
        }
    }
}

condan_country_init = {
    establish_communications_no_message = root
    save_global_event_target_as = condan_country
    set_variable = { which = condan_power value = 1 }
    set_variable = { which = condan_embezzle_mult value = 0 }
}

create_condan_limited_hostile_country = {
    create_condan_hostile_country = { TYPE = condan_hostile }
    last_created_country = {
        set_country_flag = condan_country_limited # limited rebellions
    }
}

create_condan_full_hostile_country = {
    if = {
        limit = { exists = event_target:condan_leader }
        event_target:condan_leader = { kill_leader = { show_notification = no } }
    }
    if = {
        limit = { NOT = { exists = event_target:condan_evil_bot }}
        create_condan_evil_bot = yes
    }
    create_condan_hostile_country = { TYPE = default }
    last_created_country = {
        create_condan_leader_commander = yes
        last_created_leader = {
            add_skill = 10
            change_species = event_target:condan_evil_bot
            exile_leader_as = condan_ruler
        }
        set_leader = condan_ruler
    }
}

create_condan_bot = {
    create_species = {
        name = "NAME_CONDAN"
        class = "ROBOT"
        namelist = "AI"
        portrait = "hum_robot_red"
        immortal = yes
        traits = {
            trait = "trait_machine_unit"
        }
        effect = { save_global_event_target_as = condan_bot }
    }
}

create_condan_evil_bot = {
    create_species = {
        name = "NAME_CONDAN"
        class = "ROBOT"
        namelist = "AI"
        portrait = "ai_crisis_1"
        immortal = yes
        traits = {
            trait = "trait_machine_unit"
        }
        effect = { save_global_event_target_as = condan_evil_bot }
    }
}

# scope = country
condan_activate_terminator = {
    set_country_flag = condan_terminator
    clear_ethos = yes
    # tried shift ethic, but that didn't work out and left with 1 ethic remaining and that went VERY wrong
    country_add_ethic = ethic_gestalt_consciousness
    change_government = {
        authority = auth_machine_intelligence
        civics = {
            civic = civic_machine_terminator
            civic = civic_machine_warbots
        }
        cooldown = no
        remove_invalid_civics = yes
    }
}

create_condan_leader_official = {
    create_leader = {
        class = official
        species = event_target:condan_bot
        name = "NAME_CONDAN"
        gender = indeterminable
        event_leader = yes
        immortal = yes
        randomize_traits = no
        skip_background_generation = yes
        custom_catch_phrase = condan_catch_phrase
        custom_description = desc_condan
        set_age = 0
        skill = 1 # skill gets upgraded by script.
        hide_age = yes
        traits = {
            # need to give them some enough traits to make the trait selection shut up
            # players should never see this
            trait = leader_trait_synthetic
            trait = subclass_official_governor

            trait = condan_leader_trait_official_governor_total_war

            trait = condan_leader_trait_governor
            trait = condan_leader_trait_offical
            trait = condan_leader_trait_councillor

            trait = leader_trait_private_mines_2
            trait = leader_trait_eager_2

            trait = condan_leader_trait_govenor_negative
        }
        background_ethic = ethic_gestalt_consciousness
        background_planet = event_target:condan_planet
        effect = {
            set_leader_flag = legendary_leader
            set_leader_flag = condan
            set_leader_flag = immune_to_negative_traits
            set_variable = { which = condan_embezzle_mult value = 0 }
        }
    }
}


create_condan_leader_commander = {
    create_leader = {
        class = commander
        species = event_target:condan_bot
        name = "NAME_CONDAN"
        gender = indeterminable
        event_leader = yes
        immortal = yes
        randomize_traits = no
        skip_background_generation = yes
        custom_catch_phrase = condan_catch_phrase
        custom_description = desc_condan
        set_age = 0
        skill = 1
        hide_age = yes
        traits = {
            # need to give them some traits to make the trait selection shut up
            # Never matters what is in here, because player will never see it
            trait = leader_trait_synthetic
            trait = condan_leader_trait_commander_admiral_total_war
            trait = subclass_commander_admiral

            trait = leader_trait_wrecker_3
            trait = leader_trait_artillerist_3

            trait = leader_trait_aggressive_2
            trait = leader_trait_unyielding_2
            trait = leader_trait_engineer_2

            trait = leader_trait_scout_2# test

            trait = leader_trait_reckless_2
        }
        background_ethic = ethic_gestalt_consciousness
        background_planet = event_target:condan_planet
        effect = {
            set_leader_flag = legendary_leader
            set_leader_flag = condan
            set_leader_flag = immune_to_negative_traits
            set_variable = { which = condan_embezzle_mult value = 0 }
        }
    }
}


# This is annoying, it was actually quite tricky to create a leader without a trait pick, the game keeps trying to give me a trait pick option
# I wanted to have a single nice method with a parameter, but every way I tried that
# ended up with a free skill pick
# So I eventually gave up and here we are with some duplicate methods and create effects.

condan_switch_to_official = {
    if = {
        limit = {
            event_target:condan_leader = {
                NOT = { leader_class = official }
            }
        }
        event_target:condan_leader = { kill_leader = { show_notification = no } }
        create_condan_leader_official = yes
        last_created_leader = {
            save_global_event_target_as = condan_leader
            add_skill = 10
            set_owner = root
        }
    }
}

condan_switch_to_commander = {
    if = {
        limit = {
            event_target:condan_leader = {
                NOT = { leader_class = commander }
            }
        }
        event_target:condan_leader = { kill_leader = { show_notification = no } }
        create_condan_leader_commander = yes
        last_created_leader = {
            save_global_event_target_as = condan_leader
            add_skill = 10
            set_owner = root
        }
    }
}

condan_switch_to_ruler = {
    event_target:condan_leader = { kill_leader = { show_notification = no } }
    create_condan_leader_commander = yes
    last_created_leader = {
        save_global_event_target_as = condan_leader
        exile_leader_as = condan_ruler
    }
}


condan_set_governor_traits = {
    remove_all_traits = yes
    condan_set_universal_traits = yes
    add_trait_no_notify = subclass_official_governor

    add_trait_no_notify = condan_leader_trait_official_governor_total_war

    add_trait_no_notify = condan_leader_trait_governor
    add_trait_no_notify = condan_leader_trait_offical

    condan_set_negative_trait = { TRAIT = condan_leader_trait_govenor_negative TRAIT_EMBEZZLE = condan_leader_trait_govenor_negative_embezzle }
}

condan_set_admiral_traits = {
    remove_all_traits = yes
    condan_set_universal_traits = yes
    add_trait_no_notify = subclass_commander_admiral

    add_trait_no_notify = condan_leader_trait_commander_admiral_total_war

    add_trait_no_notify = condan_leader_trait_admiral
    add_trait_no_notify = condan_leader_trait_commander

    condan_set_negative_trait = { TRAIT = condan_leader_trait_admiral_negative TRAIT_EMBEZZLE = condan_leader_trait_admiral_negative_embezzle }
}

condan_set_offical_councilor_traits = {
    remove_all_traits = yes
    condan_set_universal_traits = yes
    add_trait_no_notify = subclass_official_economy_councilor

    add_trait_no_notify = condan_leader_trait_official_counciller_total_war

    add_trait_no_notify = condan_leader_trait_councillor
    add_trait_no_notify = condan_leader_trait_offical

    condan_set_negative_trait = { TRAIT = condan_leader_trait_council_negative TRAIT_EMBEZZLE = condan_leader_trait_council_negative_embezzle }
}

condan_set_commander_councilor_traits = {
    remove_all_traits = yes
    condan_set_universal_traits = yes
    add_trait_no_notify = subclass_commander_councilor

    add_trait_no_notify = condan_leader_trait_commander_councillor_total_war#

    add_trait_no_notify = condan_leader_trait_strategist
    add_trait_no_notify = condan_leader_trait_commander

    condan_set_negative_trait = { TRAIT = condan_leader_trait_council_negative TRAIT_EMBEZZLE = condan_leader_trait_council_negative_embezzle }
}

condan_set_ruler_councilor_traits = {
    remove_all_traits = yes
    condan_set_universal_traits = yes

    add_trait_no_notify = leader_trait_ruler_machine_intelligence
    # condan should be admiral, but if has ended up as player ruler by event skulldugery they may be an offical
    if = {
        limit = { leader_class = commander }
        add_trait_no_notify = subclass_commander_councilor
    }
    else = { add_trait_no_notify = subclass_official_economy_councilor}

    add_trait_no_notify = condan_leader_trait_commander_councillor_total_war#
    add_trait_no_notify = condan_leader_trait_official_counciller_total_war

    add_trait_no_notify = condan_leader_trait_strategist
    add_trait_no_notify = condan_leader_trait_councillor

    condan_set_negative_trait = { TRAIT = condan_leader_trait_council_negative TRAIT_EMBEZZLE = condan_leader_trait_council_negative_embezzle }
}

condan_set_universal_traits = {
    add_trait_no_notify = leader_trait_synthetic

    if = {
        limit = { event_target:condan_country = { has_country_flag = condan_controversial_1 } }
        add_trait_no_notify = condan_leader_trait_controversial
    }

    if = {
        limit = { event_target:condan_country = { has_country_flag = condan_controversial_2 } }
        add_trait_no_notify = condan_leader_trait_controversial_2
    }

    if = {
        limit = { event_target:condan_country = { has_country_flag = condan_controversial_3 } }
        add_trait_no_notify = condan_leader_trait_controversial_3
    }
}

condan_set_negative_trait = {
    if = {
        limit = {
            exists = event_target:condan_country
            event_target:condan_country = { check_variable = { which = condan_embezzle_mult value > 0 } }
        }
        add_trait_no_notify = $TRAIT_EMBEZZLE$
        set_variable = { which = condan_embezzle_mult value = event_target:condan_country.condan_embezzle_mult }
    }
    else = {
        add_trait_no_notify = $TRAIT$
    }
}



# country scope
condan_recruit_army = {
    add_resource = { sr_living_metal = -300 }
    add_resource = { alloys = -500 }
    add_resource = { minerals = -1000 }
    hidden_effect = {
        remove_country_flag = condan_enable_army_project
        set_country_flag = condan_can_recruit_armies
        event_target:condan_planet = { set_planet_flag = recruit_condan_army}
    }
}

# country scope
condan_build_fleet = {
    hidden_effect = { set_country_flag = condan_recruiting_fleet }
    start_situation = {
        type = condan_build_ships_situation
        target = event_target:condan_planet
    }
}

# scope: condan:leader
# Because condan gets killed a lot, need to use their country to store state
condan_set_controversal_1 = {
    switch = {
        trigger = has_trait
        condan_leader_trait_controversial = {
            add_trait = condan_leader_trait_controversial_2
            hidden_effect = { event_target:condan_country = { set_country_flag = condan_controversial_2} }
        }
        condan_leader_trait_controversial_2 = {
            add_trait = condan_leader_trait_controversial_3
            hidden_effect = { event_target:condan_country = { set_country_flag = condan_controversial_3} }
        }
        default = {
            add_trait = condan_leader_trait_controversial
            hidden_effect = { event_target:condan_country = { set_country_flag = condan_controversial_1} }
        }
    }
}

condan_set_controversal_2 = {
    switch = {
        trigger = has_trait
        condan_leader_trait_controversial = {
            add_trait = condan_leader_trait_controversial_3
            hidden_effect = { event_target:condan_country = { set_country_flag = condan_controversial_3} }
        }
        condan_leader_trait_controversial_2 = {
            add_trait = condan_leader_trait_controversial_3
            hidden_effect = { event_target:condan_country = { set_country_flag = condan_controversial_3} }
        }
        default = {
            add_trait = condan_leader_trait_controversial_2
            hidden_effect = { event_target:condan_country = { set_country_flag = condan_controversial_2} }
        }
    }
}

#planet scope
condan_secure_planet = {
    create_pop = { species = event_target:condan_bot }
    while = {
        count = 3
        create_army = {
            owner = event_target:condan_country
            species = event_target:condan_bot
            type = condan_warform_def
        }
    }
    while = {
        count = 10
        create_army = {
            owner = event_target:condan_country
            species = event_target:condan_bot
            type = condan_defence_2
        }
    }
    while = {
        count = 10
        create_army = {
            owner = event_target:condan_country
            species = event_target:condan_bot
            type = robot_uprising_army
        }
    }
}

#planet scope
condan_secure_system = {
    solar_system = {
        if = { # Build starbase if no other colonies are left
            limit = {
                NOT = {
                    any_system_planet = {
                        has_owner = yes
                        owner = {
                            NOT = { is_same_value = event_target:condan_country }
                        }
                    }
                }
            }
            random_fleet_in_system = {
                limit = { is_ship_class = shipclass_starbase}
                destroy_fleet = this
            }

            create_starbase = {
                size = starbase_ai
                owner = event_target:condan_country
            }
        }
    }
}

condan_tag_system_for_rebellion = {
    every_system = {
        limit = {
            distance = {
                source = event_target:condan_rebellion_core
                use_bypasses = yes # oh what's that, did you put a gateway in condans system?  that's a bit awkward!
                bypass_empire = event_target:organic_empire
                min_jumps = 0
                max_jumps = $MAX_JUMPS$
            }
            NOT = { has_star_flag = condan_no_flip }
            NOT = { any_system_planet = { is_same_value = event_target:organic_empire.capital_scope } }
            exists = starbase
            starbase = { owner = { is_same_value = event_target:organic_empire } }
        }
        set_star_flag = machup_system_flip
    }
}

condan_tag_empire_home_cluster = {
    event_target:organic_empire = {
        capital_scope = {
            solar_system = {
                set_timed_star_flag = { flag = condan_no_flip days = 5 }
                save_event_target_as = organic_capital_system
            }
        }
    }
    event_target:condan_rebellion_core = {
        solar_system = { save_event_target_as = condan_rebellion_core_system }
    }
    if = {
        # you and condan are right on top of each other, so we are going to save your guaranteed habitables, but that's it
        limit = {
            any_system = {
                distance = {
                    source = event_target:organic_capital_system
                    use_bypasses = no
                    min_jumps = 0
                    max_jumps = 2
                }
                is_same_value = event_target:condan_rebellion_core_system
            }
        }
        log = "in close tagging"
        event_target:organic_empire = {
            every_system_within_border = {
                limit = {
                    distance = {
                        source = event_target:organic_capital_system
                        use_bypasses = no
                        min_jumps = 0
                        max_jumps = 2
                    }
                    any_system_planet = {
                        has_owner = yes
                        has_planet_flag = prescripted_ideal
                    }
                }
                set_timed_star_flag = { flag = condan_no_flip days = 5 }
            }
        }
    }
    else = {
        log = "in far tagging"
        # have an entire cluster
        event_target:organic_empire = {
            every_system_within_border = {
                limit = {
                    distance = {
                        source = event_target:organic_capital_system
                        use_bypasses = no
                        min_jumps = 0
                        max_jumps = 2
                    }
                }
                set_timed_star_flag = { flag = condan_no_flip days = 5 }
            }
        }
    }
}

condan_choose_rebellion_home_planet = {
    if = {
        limit = { condan_owns_world = yes }
        event_target:condan_planet = { save_event_target_as = condan_rebellion_core }
    }
    else_if = {
        # else prefer a machine world or eccu
        limit = {
            any_owned_planet = {
                OR = {
                    is_planet_class = pc_machine
                    is_planet_class = pc_city
                }
                NOT = { is_same_value = ROOT.capital_scope }
                distance = {
                    source = ROOT.capital_scope
                    min_jumps > 3
                }
                OR = {
                    has_building = building_foundry_1
                    has_building = building_foundry_2
                    has_building = building_foundry_3
                }
            }
        }
        random_owned_planet = {
            limit = {
                OR = {
                    is_planet_class = pc_machine
                    is_planet_class = pc_city
                }
                NOT = { is_same_value = ROOT.capital_scope }
                distance = {
                    source = ROOT.capital_scope
                    min_jumps > 3
                }
                OR = {
                    has_building = building_foundry_1
                    has_building = building_foundry_2
                    has_building = building_foundry_3
                }
            }
            save_event_target_as = condan_rebellion_core
        }

    }
    else_if = {
        # else prefer an industrial world
        limit = {
            any_owned_planet = {
                NOT = { is_same_value = ROOT.capital_scope }
                distance = {
                    source = ROOT.capital_scope
                    min_jumps > 3
                }
                OR = {
                    num_districts = { type = district_industrial value > 3 }
                    has_building = building_foundry_1
                    has_building = building_foundry_2
                    has_building = building_foundry_3
                }
            }
        }
        random_owned_planet = {
            limit = {
                NOT = { is_same_value = ROOT.capital_scope }
                distance = {
                    source = ROOT.capital_scope
                    min_jumps > 3
                }
                OR = {
                    num_districts = { type = district_industrial value > 3 }
                    has_building = building_foundry_1
                    has_building = building_foundry_2
                    has_building = building_foundry_3
                }
            }
            save_event_target_as = condan_rebellion_core
        }

    }
    else_if = {
        # we are now scraping the bottom of the barrel
        limit = {
            any_owned_planet = {
                NOT = { is_same_value = ROOT.capital_scope }
                distance = {
                    source = ROOT.capital_scope
                    min_jumps > 3
                }
            }
        }
        random_owned_planet = {
            limit = {
                NOT = { is_same_value = ROOT.capital_scope }
                distance = {
                    source = ROOT.capital_scope
                    min_jumps > 3
                }
            }
            save_event_target_as = condan_rebellion_core
        }
    }
    else_if = {
        # seriously!  This is bad.  Any owned planet not in the capital solar system.
        limit = {
            any_owned_planet = {
                NOT = { is_same_value = ROOT.capital_scope }
                distance = {
                    source = ROOT.capital_scope
                    min_jumps > 0
                }
            }
        }
        random_owned_planet = {
            limit = {
                NOT = { is_same_value = ROOT.capital_scope }
                distance = {
                    source = ROOT.capital_scope
                    min_jumps > 0
                }
            }
            save_event_target_as = condan_rebellion_core
        }
    }
    else = {
        # you have only your capital system.  Guess you loose.
        random_owned_planet = {
            save_event_target_as = condan_rebellion_core
        }
    }
}
