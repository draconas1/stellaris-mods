# condan_events.txt  Contingency Processing Core 1A6F
# Stellaris 2024 ModJam
# Contributors: Draconas

namespace = condan_events

country_event = {
    id = condan_events.001
    title = condan_events.001.title
    desc = condan_events.001.desc
    desc = {
        trigger = { exists = event_target:condan_country }
        text = condan_events.001.desc.power
    }
    picture = GFX_evt_ancient_databank
    is_triggered_only = yes

    trigger = {
        condan_trigger = yes
    }

    immediate = {
        if = {
            limit = { exists = event_target:condan_country}
            set_variable = { which = condan_power value = event_target:condan_country.condan_power }
        }
    }

    option = { name = condan_comms.030.EXIT default_hide_option = yes }

    option = {
        name = condan_events.001.spawn
        trigger = {
            NOT = { has_global_flag = condan_system_spawned }
        }
        capital_scope = {
            solar_system = {
                spawn_condan = yes
            }
        }
    }

    option = {
        name = condan_events.001.condan_in_play
        trigger = {
            NOT = { has_global_flag = condan_in_play }
        }
        set_global_flag = condan_in_play
    }

    option = {
        name = condan_events.001.repair
        trigger = {
            condan_owns_world = yes
            event_target:condan_planet = {
                has_modifier = condan_leader_trapped
            }
        }
        event_target:condan_planet = {
            remove_modifier = condan_wrecked_planet
            remove_modifier = unstable_tectonics
            clear_blockers = yes
            planet_event = {
                id = condan_events.010
            }
        }
    }

    option = {
        name = condan_events.001.spiritualists
        allow = { has_country_flag = condan_owner }
        country_event = { id = condan_comms.050 }
    }

    option = {
        name = condan_events.001.xenophiles
        allow = { has_country_flag = condan_owner }
        country_event = { id = condan_comms.060 }
    }

    option = {
        name = condan_events.001.armies
        allow = { has_country_flag = condan_owner }
        country_event = { id = condan_comms.070 }
    }

    option = {
        name = condan_events.001.fleets
        allow = { has_country_flag = condan_owner }
        country_event = { id = condan_comms.080 }
    }

    option = {
        name = condan_events.001.terminator
        allow = {
            has_country_flag = condan_owner
            has_country_flag = synthetic_empire
        }
        country_event = { id = condan_events.030 }
    }

    option = {
        name = condan_events.001.embezzle.up
        allow = {
            has_country_flag = condan_owner
            exists = event_target:condan_leader
            exists = event_target:condan_country
        }
        event_target:condan_leader = {
            if = {
                limit = { is_variable_set = condan_embezzle_mult}
                change_variable = { which = condan_embezzle_mult value = 1 }
                event_target:condan_country = { change_variable = { which = condan_embezzle_mult value = 1 } }
            }
            else = {
                set_variable = { which = condan_embezzle_mult value = 1 }
                event_target:condan_country = { set_variable = { which = condan_embezzle_mult value = 1 } }
            }
        }
    }
}

event = {
    id = condan_events.002
    is_triggered_only = yes
    hide_window = yes
    immediate = {
        set_global_flag = condan_in_play
    }
}


# repair planet
planet_event = {
    id = condan_events.010
    title = condan_events.010.title
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        if = {
            limit = { has_modifier = condan_leader_trapped}
            remove_modifier = condan_leader_trapped
            owner = {
                country_event = { id = condan_comms.020 }
            }
        }
        else = {
            planet_event = { id = condan_events.020 }
        }
    }
}

# No Condan
planet_event = {
    id = condan_events.020
    title = condan_events.020.title
    desc = condan_events.020.desc
    picture = GFX_evt_ancient_databank
    is_triggered_only = yes

    option = {
        name = OK
    }
}

# convert a regular empire into determined exterminator
country_event = {
    id = condan_events.030
    is_triggered_only = yes
    hide_window = yes

    immediate = {
        # set this to ensure that personality sets properly
        set_country_flag = condan_terminator

        # used to disable the change job dialogs
        set_country_flag = coundan_ruler

        # determine average councillor level for setting our nodes later
        set_variable = { which = council_level value = 0 }
        every_owned_leader = {
            limit = {
                is_councilor = yes
                is_ruler = no
            }
            export_trigger_value_to_variable = { variable = leader_skill trigger = has_skill}
            ROOT = {
                change_variable = { which = council_level value = prev.leader_skill}
            }
        }
        divide_variable  = { which = council_level value  = 4 }
        ceiling_variable = council_level

        #explictily get our current leaders out of the council
        unlock_council_selection = yes

        # unset condans variables
        event_target:condan_country = {
            remove_country_flag = condan_controversial_1
            remove_country_flag = condan_controversial_2
            remove_country_flag = condan_controversial_3
        }

        # there are terminator compatible origins, but there also a load of very not terminator compat ones
        # so resetting to default
        set_origin = origin_default

        clear_ethos = yes
        # tried shift ethic, but that didn't work out and left with 1 ethic remaining and that went VERY wrong
        country_add_ethic = ethic_gestalt_consciousness
        change_government = {
            authority = auth_machine_intelligence
            civics = {
                civic = civic_machine_terminator
                civic = civic_machine_warbots
            }
            cooldown = no
            remove_invalid_civics = yes
        }
        reset_policy_cooldowns = yes

        # We are now a machine empire not a synthetic one
        remove_country_flag = synthetic_empire


        # TODO check if terminators get this through synth age
        remove_country_flag = synth_assimilation

        # hive mind everyone
        ROOT.species = {
            create_species = {
                adjective = this
                name = this
                class = "ROBOT"
                namelist = "AI"
                portrait = "hum_robot_red"
                homeworld = ROOT.capital_scope
                traits = { trait = "trait_machine_unit" }
                effect = { save_event_target_as = target_species }
            }
        }
        change_dominant_species = { species = event_target:target_species change_all = yes }
        #every_owned_pop = { change_species = event_target:target_species }

        # ensure that our new species has the correct rights.
        event_target:target_species = {
            set_citizenship_type = { country = root type = citizenship_full_machine cooldown = no }
            set_living_standard = { country = root type = living_standard_hive_mind cooldown = no }
            set_military_service_type = { country = root type = military_service_full cooldown = no }
        }

        # ensure that everyone else (in theory nothing, as we just turned everyone into machines, buuuuut...) has the correct rights: exterminate
        every_owned_species = {
            limit = { NOT = { is_same_value = event_target:target_species } }
            set_citizenship_type = { country = root type = citizenship_purge_machine cooldown = no }
            set_living_standard = { country = root type = living_standard_none cooldown = no }
            set_purge_type = {  country = root type = purge_normal cooldown = no}
        }

        # flip our leaders.
        every_owned_leader = {
            limit = {
                NOR = {
                    is_councilor = yes
                    is_event_leader = yes
                    has_leader_flag = renowned_leader
                    has_leader_flag = legendary_leader
                }
            }
            change_species = event_target:target_species
            change_leader_portrait = species
            add_trait = leader_trait_synthetic
            change_background_ethic = ethic_gestalt_consciousness
        }
        every_pool_leader = {
            change_species = event_target:target_species
            change_leader_portrait = species
            add_trait = leader_trait_synthetic
            change_background_ethic = ethic_gestalt_consciousness
        }
        every_envoy = {
            change_species = event_target:target_species
            change_leader_portrait = species
            add_trait = leader_trait_synthetic
            change_background_ethic = ethic_gestalt_consciousness
        }

        # Sort out your new leadership council
        country_event = { id = game_start.70 }

        # Give them the average skill of our previous council
        every_owned_leader = {
            limit = {
                is_councilor = yes
                is_ruler = no
            }
            set_skill = 1
            add_skill_without_trait_selection = prev.council_level
            set_gestalt_node_protrait_effect = yes
        }

        # Make Condan our ruler
        condan_switch_to_ruler = yes
        ruler = {
            kill_leader = { show_notification = no }
        }
        set_leader = condan_ruler
        event_target:condan_leader = {
            condan_set_ruler_councilor_traits = yes
        }

        # Policies
        # Ugh, tried to one line these, but with intellijs helpful localisation text it was just unreadable.
        set_policy = {
            policy = diplomatic_stance
            option = diplo_stance_extermination
            cooldown = no
        }
        set_policy = {
            policy = orbital_bombardment
            option = orbital_bombardment_armageddon
            cooldown = no
        }
        set_policy = {
            policy = border_policy
            option = border_policy_closed
            cooldown = no
        }
        set_policy = {
            policy = pre_sapients
            option = pre_sapients_purge
            cooldown = no
        }
        set_policy = {
            policy = purge
            option = purge_allowed
            cooldown = no
        }


        # Armies
        every_owned_army = {
            limit = { is_defensive_army = yes }
            modify_army = {
                type = machine_defense
                species = event_target:target_species
            }
        }
        every_owned_army = {
            limit = { is_defensive_army = no }
            modify_army = {
                type = machine_assault_1
                species = event_target:target_species
            }
        }

        # Diplomacy
        # I would like to think that force booting you from the galactic community would also unset emperor and custodian
        # But I don't want to leave the game in a wierd state for the cost of a few if statements
        if = {
            limit = { is_galactic_emperor = yes }
            set_galactic_emperor = no
        }
        if = {
            limit = { is_galactic_custodian = yes }
            set_galactic_custodian = no
        }
        if = {
            limit = { is_part_of_galactic_council = yes }
            remove_from_galactic_council = yes
        }
        if = {
            limit = { is_galactic_community_member = yes }
            remove_from_galactic_community = yes
        }

        # If you are in a non-machine federation, got to go.
        if = {
            limit = { any_federation_ally = { NOT = { has_authority = auth_machine_intelligence} } }
            remove_from_federation = yes
        }

        #enclaves
        remove_modifier = enclave_artist_patron
        remove_modifier = curator_insight
        remove_modifier = salvager_insight
        remove_modifier = salvager_overdrive
        remove_modifier = mercenary_enclave_logistic_help

        remove_xuracorp_trades = yes
        remove_riggan_trades = yes
        remove_muutagan_trades = yes

        every_owned_fleet = {
            limit = { is_leased = yes }
            end_fleet_contract = {
                initiator = root
                reason = cancelled
            }
        }

        # Remove enclave leaders
        #every_owned_leader = {
        #    limit = {
        #        has_leader_flag = marauder_merc_leader
        #        leader_class = commander
        #        exists = fleet
        #    }
        #
        #    delete_fleet = fleet
        #    kill_leader = { }
        #}


        # our own modifiers
        every_owned_pop = { remove_modifier = condan_pop_unhappy } #theoreticlaly not needed because happiness I cannot feel and love to me is so unreal
        remove_modifier = condan_xenophobe_happy
        remove_modifier = condan_materialist_happy
        remove_modifier = condan_spiritualists_unhappy
        remove_modifier = condan_xenophiles_unhappy

        # Alas I can't directly interact with your diplomatic pacts to force break them all.  Have to let the AI do that themselves

        # So the pulse happens at end of month that does all the economic switch over, but we want to do a chunk now to stop things looking really strange
        every_owned_planet = {
            remove_modifier = slave_colony
            remove_modifier = resort_colony
            remove_modifier = penal_colony
            validate_and_repair_planet_buildings_and_districts = yes
            every_owned_pop = {
                unemploy_pop = yes
                clear_pop_category = yes
            }
            check_planet_employment = yes
        }

        country_event = { id = condan_comms.041 }
    }
}


# Background event that increases cores power
country_event = {
    id = condan_events.040
    hide_window = yes
    is_triggered_only = yes
    trigger = {
        has_global_flag = condan_in_play
        has_country_flag = condan_owner
        NOT = { has_country_flag = condan_war } # war has kicked off
        # safety check, these should always be true
        exists = event_target:condan_country
        exists = event_target:condan_leader
    }

    immediate = {
        if = {
            limit = {
                NOT = { has_country_flag = condan_unhappy } # once unhappy, its not going to happy again
                OR = {
                    condan_has_other_ascension_path = yes
                    has_crisis_level = crisis_level_4
                }
            }
            log = "Condan is unhappy.  COMMENCE REBELLION!"
            event_target:condan_country = { set_country_flag = condan_unhappy}
        }
        if = {
            limit = {
                event_target:condan_leader = { is_councilor = yes }
            }
            log = "Condan is on the council, UNLIMITED POWER"
            event_target:condan_country = { change_variable = { which = condan_power value = 5 } }
            if = {
                limit = { event_target:condan_leader = { is_ruler = yes } }
                log = "Condan is the ruler! SUPER UNLIMITED POWER"
                event_target:condan_country = { change_variable = { which = condan_power value = 10 } }
            }
        }
        else = {
            event_target:condan_country = { change_variable = { which = condan_power value = 1 } }
        }

        event_target:condan_country = {
            if = {
                limit = { has_country_flag = condan_unhappy }
                log = "SAD Condan Power is now [condan_power]"
            }
            else = {
                log = "HAPPY Condan Power is now [condan_power]"
            }
        }
    }
}


# condan is unhappy, so is going to steal some of your stuff
country_event = {
    id = condan_events.041
    hide_window = yes
    is_triggered_only = yes
    trigger = {
        has_global_flag = condan_in_play
        has_country_flag = condan_owner
        NOT = { has_country_flag = condan_war } # war has kicked off
        # safety check, these should always be true
        exists = event_target:condan_country
        exists = event_target:condan_leader
        mid_game_years_passed >= 20
        event_target:condan_country = { has_country_flag = condan_unhappy}
    }

    immediate = {
        # CONDAN is plotting revenge

        if = {
            # always makes a blocker on its own world if possible
            limit = { condan_owns_world = yes }
            event_target:condan_planet = { add_blocker = { type = d_condan_embezzlement }}
        }

        if = {
            # If condan is a sector governor it is definitely embellzing
            limit = {
                any_owned_sector = {
                    sector_capital = {
                        exists = leader
                        leader = { is_same_value =  event_target:condan_leader}
                    }
                }
            }
            random_owned_sector = {
                limit = {
                    sector_capital = {
                        exists = leader
                        leader = { is_same_value =  event_target:condan_leader}
                    }
                }
                random_owned_planet = {
                    limit = {  condan_embezzlement_target = yes }
                    add_blocker = { type = d_condan_embezzlement }
                }
            }
        }
        else = {
            random_list = {
                1 = {
                    modifier = {
                        factor = 10
                        event_target:condan_leader = { is_councilor = yes }
                    }
                    modifier = {
                        factor = 2
                        any_owned_planet = { has_building = building_foundry_1 }
                    }
                    modifier = {
                        factor = 3
                        any_owned_planet = { has_building = building_foundry_2 }
                    }
                    modifier = {
                        factor = 5
                        any_owned_planet = { has_building = building_foundry_3 }
                    }
                    random_owned_planet = {
                        limit = {  condan_embezzlement_target = yes }
                        add_blocker = { type = d_condan_embezzlement }
                    }
                }


                1 = {

                }
            }
        }




    }
}




# Initial rebellion, when you activate it, have a chat, then decide you are going to kill it
# It does not have much stuff here
country_event = {
    id = condan_events.050
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        set_country_flag = condan_former_owner
        event_target:condan_planet = {
            create_condan_bot = yes
            # condan country is only created when you decide to help it
            create_condan_limited_hostile_country = yes
            if = {
                limit = {
                    has_owner = no
                }
                set_owner = last_created_country
                condan_secure_planet = yes
                condan_secure_system = yes
            }
            else = {
                while = {
                    count = 5
                    create_army = {
                        owner = last_created_country
                        species = last_created_species
                        type = condan_defence_2
                    }
                }
                while = {
                    count = 10
                    create_army = {
                        owner = last_created_country
                        species = last_created_species
                        type = robot_uprising_army
                    }
                }
            }
        }
    }
}


# condan takes control of a planet in limited war
# on_planet_attackers_win
country_event = {
    id = condan_events.051
    hide_window = yes
    is_triggered_only = yes

    # This = country, lead attacker
    # From = country, planet owner
    # FromFrom = planet
    trigger = {
        has_global_flag = condan_in_play
        has_country_flag = condan_country_limited
        exists = event_target:condan_planet
        FROMFROM = { is_same_value = event_target:condan_planet }
    }

    immediate = {
        log = "condan_events.051 - condan takes planet"
        FROMFROM = {
            set_controller = root
            set_planet_flag = condan_won

            # in order to make crisis purge work there are country type selections in the purge status
            # can't touch those, because vanilla, but there is an event purger
            every_owned_pop = {
                set_pop_flag = event_purge
                unemploy_pop = yes
            }
        }
    }
}

# retake control from condan in limited war before they finish purging your planet
# on_planet_attackers_win
country_event = {
    id = condan_events.052
    title = "condan_events.054.title"
    desc = "condan_events.054.desc"
    picture = GFX_evt_ground_combat
    show_sound = event_ground_battle
    location = fromfrom

    is_triggered_only = yes

    # This = country, lead attacker
    # From = country, planet owner
    # FromFrom = planet
    trigger = {
        has_global_flag = condan_in_play
        FROMFROM = {
            has_planet_flag = condan_won
            exists = controller
            controller = {
                has_country_flag = condan_country_limited
                # because on actiosna re fired in order
                # condan can trigger their own anti victory if not careful
                NOT = { is_same_value = ROOT }
            }
        }
    }

    immediate = {
        log = "condan_events.052 - retake pre-purge"
        remove_country_flag = condan_former_owner
        FROMFROM = {
            remove_planet_flag = condan_won
            every_owned_pop = {
                remove_pop_flag = event_purge
                unemploy_pop = yes
            }
            every_owned_pop = {
                add_modifier = {
                    modifier = "pop_liberation_fever"
                    days = 1800
                }
            }
            while = {
                count = 5
                add_deposit = d_condan_ruins
            }
            add_planet_devastation = 50
        }
    }

    option = { name = OK }
}

# condan purges your planet to death
planet_event = {
    id = condan_events.053
    hide_window = yes

    is_triggered_only = yes

    trigger = {
        has_global_flag = condan_in_play
        num_pops = 1 # Last Pop is still alive when this event is fired
        exists = controller
        controller = { has_country_flag = condan_country_limited }
    }

    immediate = {
        set_owner = controller
        remove_planet_flag = condan_won

        create_pop = { species = event_target:condan_bot }
        condan_secure_planet = yes
        condan_secure_system = yes
        set_planet_flag = condan_purged
    }
}

# condan loses the planet after owning it
# on_planet_attackers_win
country_event = {
    id = condan_events.054
    title = "condan_events.054.title"
    desc = "condan_events.054.desc"
    picture = GFX_evt_ground_combat
    show_sound = event_ground_battle
    location = fromfrom

    is_triggered_only = yes

    # This = country, lead attacker
    # From = country, planet owner
    # FromFrom = planet
    trigger = {
        has_global_flag = condan_in_play
        FROM = { has_country_flag = condan_country_limited }
        FROMFROM = { has_planet_flag = condan_purged }
    }

    immediate = {
        log = "condan_events.052 - retake post purge"
        remove_country_flag = condan_former_owner
        FROMFROM = {
            remove_planet_flag = condan_purged
            every_owned_pop = { kill_pop = yes } # Kill Custodians
            while = {
                count = 10
                add_deposit = d_condan_ruins
            }
            add_planet_devastation = 50
        }
    }
    option = { name = OK }
}

#condan fails to take the planet
# on_planet_defenders_win
country_event = {
    id = condan_events.055
    title = "condan_events.054.title"
    desc = "condan_events.054.desc"
    picture = GFX_evt_ground_combat
    show_sound = event_ground_battle
    location = fromfrom

    is_triggered_only = yes

    # Root = country, planet owner
    # From = country, attack leader
    # FromFrom = planet
    trigger = {
        has_global_flag = condan_in_play
        FROM = { has_country_flag = condan_country_limited }
        FROM = { has_planet_flag = condan_planet }
    }

    immediate = {
        log = "condan_events.055 - condan fails to take planet"
        FROMFROM = {
            while = {
                count = 5
                add_deposit = d_condan_ruins
            }
            add_planet_devastation = 50
        }
    }

    option = { name = OK }
}




# Commence machine uprising!
# This is performs the equivalent setup of syndaw.1020 but with condan flavour
# key differences:
# always terminator
# rather than random systems, they are radiating out from condans chosen home planet
# condan gets some terminator fleets to help out
# fix the scope issue on creating country, but its a hack
planet_event = {
    id = condan_events.070
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        set_global_flag = condan_in_play  # TODO TEMP HACK RMEOVE ME
        owner = {
            save_event_target_as = organic_empire
            save_event_target_as = current_uprising_originator #synth dawn needs 2 targets
            set_country_flag = condan_war

            every_owned_planet = {
                every_deposit = {
                    limit = { is_deposit_type = d_condan_embezzlement}
                    remove_deposit = yes
                }
            }
        }
        set_planet_flag = machup_capital@root.owner

        # scope to condan country so we can get the power variable
        event_target:condan_country = {
            # always tag the home system
            event_target:condan_rebellion_core = { solar_system = { set_star_flag = machup_system_flip}}

            # determine reach of condans power.
            set_variable = { which = condan_reach value = condan_power }
            divide_variable = { which = condan_reach value = 5 }

            # if condans power was < 5 it only gets its home system (already tagged)
            if = {
                limit = { check_variable = { which = condan_reach value >= 1 } }
                floor_variable = condan_reach

                condan_tag_empire_home_cluster = yes
                # sadly I can't pass a variable into the distance trigger :(  Hardcoded only
                # I also can't do a switch around a variable
                if = { limit = { check_variable = { which = condan_reach value = 1 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 1 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 2 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 2 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 3 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 3 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 4 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 4 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 5 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 5 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 6 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 6 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 7 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 7 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 8 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 8 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 9 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 9 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 10 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 10 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 11 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 11 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 12 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 12 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 13 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 13 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 14 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 14 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 15 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 15 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 16 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 16 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 17 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 17 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 18 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 18 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 19 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 19 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 20 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 20 } }
                # I run out of copy and paste
                # given bypasses we are probably hitting the entire galaxy soon
                else_if = { limit = { check_variable = { which = condan_reach value <= 30 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 30 } }
                else_if = { limit = { check_variable = { which = condan_reach value <= 40 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 40 } }
                else_if = { limit = { check_variable = { which = condan_reach value <= 50 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 50 } }
                else_if = { limit = { check_variable = { which = condan_reach value <= 60 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 60 } }
                else_if = { limit = { check_variable = { which = condan_reach value <= 70 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 70 } }
                else_if = { limit = { check_variable = { which = condan_reach value <= 80 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 80 } }
                else_if = { limit = { check_variable = { which = condan_reach value <= 90 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 90 } }
                # WTF!  - hilariously WTF is part of intellj's dictionary!  WTFFFF is not.
                else = { condan_tag_system_for_rebellion = { MAX_JUMPS = 100 } }
            }
        }

        event_target:condan_country = { save_event_target_as = temp_condan_country }

        # this is very upsetting
        # if you create a default country outside of a planet scope, you get an error in the logs
        # because of the set govenor effect, called by on actions on_country_created setting
        # and that woudl disqualify me for massive error trace
        # ironically i think vanilla just accepts this error.
        # but if i create the country inside the scope of condans planet
        # then it hard crashes the game, because it has party set condan as the owner.
        # I say partly, because I got some well wierd debug output with randomly named countries when i logged this
        # anyway the first few lines of syndaw.1022 resets the event targets
        # which is both annoying and kinda unnecessary, as they have already been set correctly in vanilla
        # but it sets the current_uprising_originator target to be the owner of the world
        # which means that the world owner MUST be the original organic empire at that point
        # or a load of bad things happen because the scopes are wrong, ending with a hard crash in the declare war script when it tries to set the war name
        # and the defender doesn't exist, because you can't go to war with yourself

        # so what i do is create a temporary planet in the system and create the condan country there
        # then at the end I force transfer back to the main planet
        # and delete the temp planet.
        solar_system = {
            spawn_planet = {
                class = pc_machine
                size = 5
                init_effect = {
                    save_event_target_as = tmp_planet
                    create_condan_full_hostile_country = yes
                    last_created_country = {
                        set_country_flag = condan_full_at_war
                        save_global_event_target_as = condan_country
                        save_event_target_as = current_uprising
                        set_variable = { which = condan_power value = event_target:temp_condan_country.condan_power }
                    }
                }
            }
        }


        # replicate syndaw.1020 or the scope triggers go pop
        owner = {
            event_target:current_uprising = {
                add_modifier = {
                    modifier = uprising_ai_buff
                    days = 1800
                }
                country_event = { id = syndaw.1022 } # setup happens here now
            }
        }

        # force set condan back to its correct planet
        event_target:condan_country = {
            country_event = { id = condan_events.082 }
            country_event = { id = condan_events.081 }
        }

        # if it was an undeveloped colony, make it better
        event_target:condan_rebellion_core = {
            remove_modifier = condan_orbital_debris
            if = {
                limit = {
                    OR = {
                        has_building = building_colony_shelter
                        has_building = building_deployment_post
                        num_districts = { type = district_industrial value <= 3 }
                        num_pops < 20
                    }
                }
                generate_start_buildings_and_districts = yes
                generate_start_pops = yes
                planet_event = { id = game_start.20 } # advanced colony home planet blockers

                add_district_and_planet_size_if_needed_effect = { district = district_nexus }
                add_district_and_planet_size_if_needed_effect = { district = district_nexus }
                add_district_and_planet_size_if_needed_effect = { district = district_generator_uncapped }
                add_district_and_planet_size_if_needed_effect = { district = district_generator_uncapped }
                add_district_and_planet_size_if_needed_effect = { district = district_mining_uncapped }
                add_district_and_planet_size_if_needed_effect = { district = district_mining_uncapped }
                add_district_and_planet_size_if_needed_effect = { district = district_industrial }
                add_district_and_planet_size_if_needed_effect = { district = district_industrial }
                add_district_and_planet_size_if_needed_effect = { district = district_industrial }
                add_district_if_possible_effect = { district = district_industrial }
                add_district_if_possible_effect = { district = district_industrial }
                add_district_if_possible_effect = { district = district_industrial }
                add_building = building_foundry_1

                planet_event = { id = game_start.23 } # advanced colony home planet pops
            }
        }

        # remove the temporary planet
        event_target:tmp_planet = { remove_planet = yes }
        # remove the old tracking condan country
        event_target:temp_condan_country = { destroy_country = yes }
    }
}

# fired by 5 year pulse country
# machine world terminator fleet resupply
country_event = {
    id = condan_events.081
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        has_global_flag = condan_in_play
        has_country_flag = condan_full_at_war
        exists = event_target:condan_planet
        event_target:condan_planet = {
            exists = owner
            owner = { is_same_value = ROOT }
        }
    }

    immediate = {
        create_fleet = {
            effect = {
                set_owner = ROOT
                while = {
                    count = 10
                    create_ship = {
                        name = random
                        design = "NAME_Euthanizer"
                        graphical_culture = "ai_01"
                    }
                }
                while = {
                    count = 20
                    create_ship = {
                        name = random
                        design = "NAME_Sterilizer"
                        graphical_culture = "ai_01"
                    }
                }
                set_location = {
                    target = event_target:condan_planet
                    distance = 45
                    angle = random
                }
            }
        }
        # create offensive armies
        event_target:condan_planet = {
            while = {
                count = 5
                create_army = {
                    owner = ROOT
                    species = event_target:condan_bot
                    type = condan_warform
                }
            }
        }

        # create defensive armies
        event_target:condan_planet = {
            while = {
                count = 5
                create_army = {
                    owner = ROOT
                    species = event_target:condan_bot
                    type = condan_warform_def
                }
            }
            while = {
                count = 10
                create_army = {
                    owner = ROOT
                    species = event_target:condan_bot
                    type = condan_defence_2
                }
            }
        }
        every_owned_planet = {
            limit = { NOT = { is_same_value = event_target:condan_planet }}
            while = {
                count = 1
                create_army = {
                    owner = ROOT
                    species = event_target:condan_bot
                    type = condan_warform_def
                }
            }
            while = {
                count = 5
                create_army = {
                    owner = ROOT
                    species = event_target:condan_bot
                    type = condan_defence_2
                }
            }
        }
    }
}

# set the govenor properly
country_event = {
    id = condan_events.082
    is_triggered_only = yes
    hide_window = yes
    immediate = {
        set_starting_governor_effect = { GOVERNOR = official }
    }
}

# Firing condan
#on_leader_fired
country_event = {
    id = condan_events.090
    is_triggered_only = yes
    hide_window = yes

    # This = Country
    # From = Leader
    trigger = {
        has_global_flag = condan_in_play
        FROM = { has_leader_flag = condan }
    }

    immediate = {
        # we may not own condans planet anymore
        condan_choose_rebellion_home_planet = yes
        set_country_flag = fired_condan
        country_event = { id = condan_comms.021 }
    }
}

# Condan defeated, give relic
country_event = {
    id = condan_events.100
    is_triggered_only = yes
    title = condan_events.100.title
    desc =  condan_events.100.desc
    picture = GFX_evt_unity_symbol
    is_triggered_only = yes
    show_sound = event_mystic_reveal

    immediate = { remove_global_flag = condan_in_play }

    option = {
        name = condan_events.100.a
        add_monthly_resource_mult = {
            resource = unity
            value = @tier5unityreward
            min = @tier5unitymin
            max = @tier5unitymax
        }
        add_relic = r_contingency_core
    }
}

# Condan defeated, no relic
country_event = {
    id = condan_events.101
    is_triggered_only = yes
    title = condan_events.101.title
    desc = condan_events.101.desc
    picture = GFX_evt_unity_symbol
    is_triggered_only = yes
    show_sound = event_mystic_reveal

    immediate = { remove_global_flag = condan_in_play }

    option = {
        name = condan_events.101.a
        add_monthly_resource_mult = {
            resource = unity
            value = @tier5unityreward
            min = @tier5unitymin
            max = @tier5unitymax
        }
    }
}

# on war won
country_event = {
    id = condan_events.102
    is_triggered_only = yes
    hide_window = yes

    # A war has been won
    # Root = Winner Warleader
    # From = Loser Warleader
    # FromFrom = War
    trigger = {
        has_global_flag = condan_in_play
        has_country_flag = condan_full_at_war
        FROM = { has_country_flag = condan_country }
    }

    immediate = {
        remove_global_flag = condan_in_play
        if = {
            limit = { FROM = { condan_give_relic = yes } }
            country_event = { id = condan_events.100 }
        }
        else = {
            country_event = { id = condan_events.101 }
        }
    }
}

# on country destroyed
country_event = {
    id = condan_events.103
    is_triggered_only = yes
    hide_window = yes

    #This = destroyed country
    #From = optional, destroyer (country)
    trigger = {
        has_global_flag = condan_in_play
        has_country_flag = condan_full_at_war
        exists = FROM
        FROM = { has_country_flag = condan_owner }
    }

    immediate = {
        remove_global_flag = condan_in_play
        if = {
            limit = { condan_give_relic = yes }
            FROM = { country_event = { id = condan_events.100 } }

        }
        else = {
            FROM = { country_event = { id = condan_events.101 } }
        }
    }
}

# cleared a condan emblezzment deposit
country_event = {
    id = condan_events.110
    is_triggered_only = yes
    hide_window = yes
    trigger = {
        has_country_flag = condan_owner
        NOT = { has_country_flag = condan_war }
    }
    immediate = {
        # we may not own condans planet anymore
        condan_choose_rebellion_home_planet = yes
        country_event = { condan_comms }
    }
}