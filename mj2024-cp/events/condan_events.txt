# condan_events.txt  Contingency Processing Core 1A6F
# Stellaris 2024 ModJam
# Contributors: Draconas

namespace = condan_events

event = {
    id = condan_events.000
    is_triggered_only = yes
    hide_window = yes
    fire_only_once = yes
    trigger = { condan_allowed_hard_requirements = yes }

    immediate = { set_global_flag = condan_allowed }
}

country_event = {
    id = condan_events.001
    title = condan_events.001.title
    desc = condan_events.001.desc
    picture = GFX_evt_ancient_databank
    is_triggered_only = yes
    is_test_event = yes

    trigger = {
        condan_trigger = yes
    }

    immediate = {
        if = {
            limit = { exists = event_target:condan_country }

            # fix inits
            event_target:condan_country = {
                if = {
                    limit = { NOT = { is_variable_set = condan_embezzle_mult }}
                    set_variable = { which = condan_embezzle_mult value = 0 }
                }
            }

            set_variable = { which = condan_power value = event_target:condan_country.condan_power }
            set_variable = { which = condan_embezzle_mult value = event_target:condan_country.condan_embezzle_mult }
        }
        else = {
            set_variable = { which = condan_power value = 0 }
            set_variable = { which = condan_embezzle_mult value = 0 }
        }
        if = {
            limit = { NOT = { is_variable_set = condan_emblezzments_cleared} }
            set_variable = { which = condan_emblezzments_cleared value = 0 }
        }
    }

    after = {
        hidden_effect = {
            clear_variable = condan_power
            clear_variable = condan_embezzle_mult
        }
    }

    option = { name = condan_comms.030.EXIT default_hide_option = yes }

    option = {
        name = condan_events.001.spawn
        trigger = { NOT = { has_global_flag = condan_system_spawned } }
        #allow = { has_global_flag = condan_enabled }
        capital_scope = {
            solar_system = {
                spawn_condan = yes
            }
        }
    }

    option = {
        name = condan_events.001.condan_in_play
        trigger = { NOT = { has_global_flag = condan_in_play }}
        set_global_flag = condan_in_play
    }

    option = {
        name = condan_events.001.power.reset
        trigger = { exists = event_target:condan_country }
        event_target:condan_country = { set_variable = { which = condan_power value = 1 } }
    }

    option = {
        name = condan_events.001.repair
        trigger = {
            condan_owns_world = yes
            event_target:condan_planet = {
                has_modifier = condan_leader_trapped
            }
        }
        event_target:condan_planet = {
            remove_modifier = condan_wrecked_planet
            remove_modifier = unstable_tectonics
            clear_blockers = yes
            planet_event = {
                id = condan_events.010
            }
        }
    }

    option = {
        name = condan_events.001.spiritualists
        allow = { has_country_flag = condan_owner }
        country_event = { id = condan_comms.050 }
    }

    option = {
        name = condan_events.001.xenophiles
        allow = { has_country_flag = condan_owner }
        country_event = { id = condan_comms.060 }
    }

    option = {
        name = condan_events.001.armies
        allow = { has_country_flag = condan_owner }
        country_event = { id = condan_comms.070 }
    }

    option = {
        name = condan_events.001.fleets
        allow = { has_country_flag = condan_owner }
        country_event = { id = condan_comms.080 }
    }

    option = {
        name = condan_events.001.terminator.dialog
        allow = {
            has_country_flag = condan_owner
            #has_country_flag = synthetic_empire
        }
        country_event = { id = condan_comms.100 }
    }


    option = {
        name = condan_events.001.terminator
        allow = {
            has_country_flag = condan_owner
            OR = {
                has_country_flag = synthetic_empire
                AND = {
                    has_authority = auth_machine_intelligence
                    NOT = { has_civic = civic_machine_terminator }
                }
            }
        }
        country_event = { id = condan_events.030 }
    }

    option = {
        name = condan_events.001.power
        allow = { has_country_flag = condan_owner }
        country_event = { id = condan_events.040 }
    }

    option = {
        name = condan_events.001.unhappy
        trigger = { condan_is_condan_unhappy = no }
        allow = { has_country_flag = condan_owner }
        event_target:condan_country = { set_country_flag = condan_unhappy }
    }

    option = {
        name = condan_events.001.happy
        trigger = { condan_is_condan_unhappy = yes }
        allow = { has_country_flag = condan_owner }
        event_target:condan_country = { remove_country_flag = condan_unhappy }
    }

    option = {
        name = condan_events.001.embezzlement
        allow = { has_country_flag = condan_owner }
        set_timed_country_flag = { flag = condan_force_event days = 1 }
        country_event = { id = condan_events.041 }
    }

    option = {
        name = condan_events.001.embezzle.up
        allow = {
            has_country_flag = condan_owner
            exists = event_target:condan_leader
            exists = event_target:condan_country
        }
        event_target:condan_leader = {
            if = {
                limit = { is_variable_set = condan_embezzle_mult}
                change_variable = { which = condan_embezzle_mult value = 1 }
                event_target:condan_country = { change_variable = { which = condan_embezzle_mult value = 1 } }
            }
            else = {
                set_variable = { which = condan_embezzle_mult value = 1 }
                event_target:condan_country = { set_variable = { which = condan_embezzle_mult value = 1 } }
            }
            switch = {
                trigger = has_trait
                condan_leader_trait_govenor_negative = { add_trait_no_notify = condan_leader_trait_govenor_negative_embezzle}
                condan_leader_trait_admiral_negative = { add_trait_no_notify = condan_leader_trait_admiral_negative_embezzle}
                condan_leader_trait_council_negative = { add_trait_no_notify = condan_leader_trait_council_negative_embezzle}
                default = {  }
            }
        }
    }

    option = {
        name = condan_events.001.embezzle.down
        allow = {
            has_country_flag = condan_owner
            exists = event_target:condan_leader
            exists = event_target:condan_country
            event_target:condan_country = { check_variable = { which = condan_embezzle_mult value > 0 }}
        }
        event_target:condan_leader = { subtract_variable = { which = condan_embezzle_mult value = 1 }}
        event_target:condan_country = { subtract_variable = { which = condan_embezzle_mult value = 1 }}
    }

    option = {
        name = condan_events.001.ruler
        allow = { has_country_flag = condan_owner }
        condan_set_as_ruler = yes
    }

    option = {
        name = condan_events.001.rebelticker
        allow = { has_country_flag = condan_owner }
        set_timed_country_flag = { flag = condan_force_event days = 1 }
        country_event = { id = condan_events.042 }
    }
}

# spawn condan anomaly
# on_planet_surveyed
planet_event = {
    id = condan_events.002
    is_triggered_only = yes
    hide_window = yes

    # Root = Planet
    # From = Country
    # FromFrom = Fleet of the science ship that surveyed it, if any
    trigger = {
        has_planet_flag = condan_planet
    }

    immediate = {
        add_anomaly = {
            category = condan_anomaly
            target = from
        }
    }
}

ship_event = {
    id = condan_events.003
    title = condan_events.003.title
    desc = condan_events.003.desc
    picture = GFX_evt_ruined_system
    is_triggered_only = yes

    option = {
        name = OK
        event_target:condan_planet = {
            enable_special_project = {
                name = CONDAN_REMOVE_DEBRIS_TECH_PROJECT
            }
            create_archaeological_site = condan_hub_dig
        }
    }
}

# repair planet
planet_event = {
    id = condan_events.010
    title = condan_events.010.title
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        if = {
            limit = {
                has_modifier = condan_leader_trapped
                owner = { # final sanity check to stop hive empires getting condan
                    is_hive_empire = no
                    is_ai = no
                }
            }
            remove_modifier = condan_leader_trapped
            owner = {
                country_event = { id = condan_comms.020 }
            }
        }
        else = {
            planet_event = { id = condan_events.020 }
            remove_global_flag = condan_in_play # just in case its been set, don't know how
        }
    }
}

# clear orbit
ship_event = {
    id = condan_events.011
    title = condan_events.011.title
    desc = condan_events.011.desc
    picture = GFX_evt_ruined_system
    is_triggered_only = yes
    location = FROM

    immediate = {
        event_target:condan_planet = {
            solar_system = {
                every_system_ambient_object = {
                    limit = {
                        OR = {
                            is_ambient_object_type = large_debris_object
                            is_ambient_object_type = medium_debris_01_object
                            is_ambient_object_type = medium_debris_02_object
                            is_ambient_object_type = unused_large_equipment_1
                            is_ambient_object_type = unused_large_equipment_2
                            is_ambient_object_type = small_debris_object
                        }
                    }
                    destroy_ambient_object = this
                }
            }
        }
    }

    option = {
        name = OK
        default_hide_option = yes
        event_target:condan_planet = { remove_modifier = condan_orbital_debris}
        owner = { add_resource = { alloys = 1000 } }
    }
}

# No Condan
planet_event = {
    id = condan_events.020
    title = condan_events.020.title
    desc = condan_events.020.desc
    picture = GFX_evt_ancient_databank
    is_triggered_only = yes

    option = {
        name = OK
    }
}

# convert empire to terminator
# chooser event
country_event = {
    id = condan_events.030
    is_triggered_only = yes
    hide_window = yes

    immediate = {
        if = {
            limit = { has_authority = auth_machine_intelligence}
            country_event = { id = condan_events.032}
        }
        else = {
            country_event = { id = condan_events.031}
        }
    }
}

#regular empire to terminator
country_event = {
    id = condan_events.031
    is_triggered_only = yes
    hide_window = yes

    immediate = {
        # set this to ensure that personality sets properly
        set_country_flag = condan_terminator

        # determine average councillor level for setting our nodes later
        set_variable = { which = council_level value = 0 }
        every_owned_leader = {
            limit = {
                is_councilor = yes
                is_ruler = no
            }
            export_trigger_value_to_variable = { variable = leader_skill trigger = has_skill}
            ROOT = {
                change_variable = { which = council_level value = prev.leader_skill}
            }
        }
        divide_variable  = { which = council_level value  = 4 }
        ceiling_variable = council_level

        #explictily get our current leaders out of the council
        unlock_council_selection = yes

        # unset condans variables
        event_target:condan_country = {
            remove_country_flag = condan_controversial_1
            remove_country_flag = condan_controversial_2
            remove_country_flag = condan_controversial_3
        }

        # We are now a machine empire not a synthetic one
        remove_country_flag = synthetic_empire
        remove_country_flag = synth_assimilation

        # hive mind everyone
        ROOT.species = {
            create_species = {
                adjective = this
                name = this
                class = "ROBOT"
                namelist = "AI"
                portrait = "hum_robot_red"
                homeworld = ROOT.capital_scope
                traits = { trait = "trait_machine_unit" }
                effect = { save_event_target_as = target_species }
            }
        }
        change_dominant_species = { species = event_target:target_species change_all = yes }

        every_owned_pop = {
            limit = {
                NOR = {
                    # my experience of these 2 triggers is they are dodgy as all hell, so using them both.
                    is_same_species = event_target:target_species
                    is_exact_same_species = event_target:target_species
                }
            }
            change_species = event_target:target_species
        }

        export_resource_stockpile_to_variable = { resource = consumer_goods variable = consumer_goods_multiplier }
        add_resource = { consumer_goods = -1 mult = consumer_goods_multiplier }
        divide_variable = { which = consumer_goods_multiplier value = 36 }
        ceiling_variable = consumer_goods_multiplier


        # there are terminator compatible origins, but there also a load of very not terminator compat ones
        # so resetting to default
        set_origin = origin_default

        clear_ethos = yes
        # tried shift ethic, but that didn't work out and left with 1 ethic remaining and that went VERY wrong
        country_add_ethic = ethic_gestalt_consciousness
        change_government = {
            authority = auth_machine_intelligence
            civics = {
                civic = civic_machine_terminator
                civic = civic_machine_warbots
            }
            cooldown = no
            remove_invalid_civics = yes
        }
        reset_policy_cooldowns = yes

        # ensure that our new species has the correct rights.
        event_target:target_species = {
            set_citizenship_type = { country = root type = citizenship_full_machine cooldown = no }
            set_living_standard = { country = root type = living_standard_hive_mind cooldown = no }
            set_military_service_type = { country = root type = military_service_full cooldown = no }
        }

        # flip our leaders.
        every_owned_leader = {
            limit = {
                NOR = {
                    is_councilor = yes
                    is_event_leader = yes
                    has_leader_flag = renowned_leader
                    has_leader_flag = legendary_leader
                }
            }
            change_species = event_target:target_species
            change_leader_portrait = species
            add_trait = leader_trait_synthetic
            change_background_ethic = ethic_gestalt_consciousness
        }
        every_pool_leader = {
            change_species = event_target:target_species
            change_leader_portrait = species
            add_trait = leader_trait_synthetic
            change_background_ethic = ethic_gestalt_consciousness
        }
        every_envoy = {
            change_species = event_target:target_species
            change_leader_portrait = species
            add_trait = leader_trait_synthetic
            change_background_ethic = ethic_gestalt_consciousness
            if = {
                limit = {
                    NOR = {
                        has_envoy_task = { task = none }
                        has_envoy_task = { task = first_contact }
                        has_envoy_task = { task = spy_network }
                    }
                }
                unassign_leader = this
            }
        }

        # Sort out your new leadership council
        country_event = { id = game_start.70 }

        # Give them the average skill of our previous council
        every_owned_leader = {
            limit = {
                is_councilor = yes
                is_ruler = no
            }
            set_skill = 1
            add_skill_without_trait_selection = prev.council_level
            set_gestalt_node_protrait_effect = yes
        }

        # Armies
        every_owned_army = {
            limit = { is_defensive_army = yes }
            modify_army = {
                type = machine_defense
                species = event_target:target_species
            }
        }
        every_owned_army = {
            limit = { is_defensive_army = no }
            modify_army = {
                type = machine_assault_1
                species = event_target:target_species
            }
        }

        # all the admin that is common between regular and machine happens here.
        condan_terminator_shared_setup = yes

        # So the pulse happens at end of month that does all the economic switch over, but we want to do a chunk now to stop things looking really strange
        every_owned_planet = {
            remove_modifier = slave_colony
            remove_modifier = resort_colony
            remove_modifier = penal_colony
            validate_and_repair_planet_buildings_and_districts = yes
            every_owned_pop = {
                unemploy_pop = yes
                clear_pop_category = yes
            }
            check_planet_employment = yes
        }

        country_event = { id = condan_comms.041 }
    }
}

# machine to terminator.  Well that was a lot less faff!
country_event = {
    id = condan_events.032
    is_triggered_only = yes
    hide_window = yes

    immediate = {
        # set this to ensure that personality sets properly
        set_country_flag = condan_terminator

        # make sure we convert the organic pops
        if = {
            limit = {
                OR = {
                   has_civic = civic_machine_assimilator
                   has_civic = civic_machine_servitor
                }
            }
            random_owned_species = {
                limit = { is_exact_same_species = from }
                save_event_target_as = target_species
            }
        }

        every_owned_pop = {
            limit = { NOT = { is_same_species = event_target:target_species } }
            change_species = event_target:target_species
        }

        if = {
            limit = {
                country_uses_consumer_goods = yes
            }
            export_resource_stockpile_to_variable = { resource = consumer_goods variable = consumer_goods_multiplier }
            add_resource = { consumer_goods = -1 mult = consumer_goods_multiplier }
            divide_variable = { which = consumer_goods_multiplier value = 36 }
            ceiling_variable = consumer_goods_multiplier
        }


        change_government = {
            authority = auth_machine_intelligence
            civics = {
                civic = civic_machine_terminator
                civic = civic_machine_warbots
            }
            cooldown = no
            remove_invalid_civics = yes
        }

        every_envoy = {
            limit = {
                NOR = {
                    has_envoy_task = { task = none }
                    has_envoy_task = { task = first_contact }
                    has_envoy_task = { task = spy_network }
                }
            }
            unassign_leader = this
        }

        # all the admin that is common between regular and machine happens here.
        condan_terminator_shared_setup = yes

        country_event = { id = condan_comms.041 }
    }
}



country_event = {
    id = condan_events.033
    title = condan_events.033.title
    desc = condan_events.033.desc
    is_triggered_only = yes
    picture = GFX_evt_ancient_databank

    immediate = {
        start_situation = {
            type = condan_generate_money_situation
            target = ROOT
        }
    }

    option = { name = OK }
}


# Background event that increases cores power
country_event = {
    id = condan_events.040
    hide_window = yes
    is_triggered_only = yes
    trigger = {
        has_global_flag = condan_in_play
        has_country_flag = condan_owner
        NOT = { has_country_flag = condan_war } # war has kicked off
        # safety check, these should always be true
        exists = event_target:condan_country
        exists = event_target:condan_leader
    }

    immediate = {
        if = {
            limit = { condan_is_condan_unhappy_full_check = yes }
            log = "Condan is unhappy.  COMMENCE REBELLION!"
            event_target:condan_country = { set_country_flag = condan_unhappy}
        }
        if = {
            limit = {
                event_target:condan_leader = { is_councilor = yes }
            }
            log = "Condan is on the council, UNLIMITED POWER"
            event_target:condan_country = { change_variable = { which = condan_power_tmp value = 5 } }
            if = {
                limit = { event_target:condan_leader = { is_ruler = yes } }
                log = "Condan is the ruler! SUPER UNLIMITED POWER"
                event_target:condan_country = { change_variable = { which = condan_power_tmp value = 10 } }
            }
        }
        else = {
            event_target:condan_country = { change_variable = { which = condan_power_tmp value = 1 } }
        }

        # condan gets the value of their embezzling
        event_target:condan_country = { change_variable = { which = condan_power_tmp value = condan_embezzle_mult } }

        #condan gets 2x the value of their deposits
        every_owned_planet = {
            limit = { has_deposit = d_condan_embezzlement}
            export_trigger_value_to_variable = {
                trigger = count_deposits
                parameters = {
                    type = d_condan_embezzlement
                }
                variable = planet_condan_embezzlement_count
                rounded = yes
            }
            multiply_variable = { which = planet_condan_embezzlement_count value = 2 }
            event_target:condan_country = { change_variable = { which = condan_power_tmp value = prev.planet_condan_embezzlement_count } }
        }

        # if it's the endgame, then double the embezzlement
        if = {
            limit = { end_game_years_passed > 0}
            event_target:condan_country = { multiply_variable = { which = condan_power_tmp value = 2 } }
        }
        event_target:condan_country = { change_variable = { which = condan_power value = condan_power_tmp } }
    }
}


# condan is unhappy, so is going to steal some of your stuff
country_event = {
    id = condan_events.041
    hide_window = yes
    is_triggered_only = yes
    trigger = {
        has_global_flag = condan_in_play
        has_country_flag = condan_owner
        NOT = { has_country_flag = condan_war } # war has kicked off
        # safety check, these should always be true
        exists = event_target:condan_country
        exists = event_target:condan_leader
        OR = {
            mid_game_years_passed >= 20
            has_country_flag = condan_force_event
        }
        condan_is_condan_unhappy = yes
    }

    immediate = {
        # CONDAN is plotting revenge

        if = {
            # always makes a blocker on its own world if possible
            limit = { condan_owns_world = yes }
            event_target:condan_planet = { add_blocker = { type = d_condan_embezzlement }}
        }

        if = {
            # If condan is a sector governor it is definitely embezzling and doing so via planets
            limit = {
                any_owned_sector = {
                    sector_capital = {
                        exists = leader
                        leader = { is_same_value =  event_target:condan_leader}
                    }
                }
            }
            random_owned_sector = {
                limit = {
                    sector_capital = {
                        exists = leader
                        leader = { is_same_value =  event_target:condan_leader}
                    }
                }
                random_owned_planet = {
                    limit = {  condan_can_be_embezzlement_target = yes }
                    add_blocker = { type = d_condan_embezzlement }
                }
            }
        }
        else = {
            while = {
                count = value:condan_number_of_embezzlment_rolls  # double the number of embezzlement attempts in the endgame
                random_list = {
                    2 = {
                        modifier = {
                            factor = 10
                            event_target:condan_leader = { is_councilor = yes }
                        }
                        modifier = {
                            factor = 5
                            any_owned_planet = {
                                exists = leader
                                leader = { is_same_value = event_target:condan_leader}
                            }
                        }
                        modifier = {
                            factor = 2
                            any_owned_planet = { has_building = building_foundry_1 }
                        }
                        modifier = {
                            factor = 3
                            any_owned_planet = { has_building = building_foundry_2 }
                        }
                        modifier = {
                            factor = 5
                            any_owned_planet = { has_building = building_foundry_3 }
                        }
                        random_owned_planet = {
                            limit = {  condan_can_be_embezzlement_target = yes }
                            add_blocker = { type = d_condan_embezzlement }
                        }
                    }


                    10 = {
                        event_target:condan_leader = {
                            if = {
                                limit = { is_variable_set = condan_embezzle_mult}
                                change_variable = { which = condan_embezzle_mult value = 1 }
                                event_target:condan_country = { change_variable = { which = condan_embezzle_mult value = 1 } }
                            }
                            else = {
                                set_variable = { which = condan_embezzle_mult value = 1 }
                                event_target:condan_country = { set_variable = { which = condan_embezzle_mult value = 1 } }
                            }

                            switch = {
                                trigger = has_trait
                                condan_leader_trait_govenor_negative = { add_trait_no_notify = condan_leader_trait_govenor_negative_embezzle}
                                condan_leader_trait_admiral_negative = { add_trait_no_notify = condan_leader_trait_admiral_negative_embezzle}
                                condan_leader_trait_council_negative = { add_trait_no_notify = condan_leader_trait_council_negative_embezzle}
                                default = {  }
                            }
                        }
                    }
                }
            }
        }
    }
}

# condan is unhappy in the lategame
country_event = {
    id = condan_events.042
    hide_window = yes
    is_triggered_only = yes
    trigger = {
        has_global_flag = condan_in_play
        has_country_flag = condan_owner
        NOT = { has_country_flag = condan_war } # war has kicked off
        # safety check, these should always be true
        exists = event_target:condan_country
        OR = {
            end_game_years_passed >= 0
            has_global_flag = endgame_crisis_early_start
            has_country_flag = condan_force_event
        }
        condan_is_condan_unhappy = yes
    }

    immediate = {
        log = "executing random roll"
        random_list = {
            # REBELLION
            10 = {
                modifier = {
                    factor = 2
                    end_game_years_passed >= 25
                }
                modifier = {
                    factor = 2
                    end_game_years_passed >= 35
                }
                modifier = {
                    factor = 2
                    end_game_years_passed >= 50
                }
                modifier = {
                    factor = 3
                    end_game_years_passed >= 70
                }
                modifier = {
                    factor = 3
                    end_game_years_passed >= 85
                }
                modifier = {
                    factor = 4
                    end_game_years_passed >= 100
                }
                modifier = {
                    factor = 10
                    has_crisis_level = crisis_level_4
                }
                # we may not own condans planet anymore
                condan_choose_rebellion_home_planet = yes
                set_country_flag = condan_rebellion_ticker_happened
                country_event = { id = condan_comms.021 }
            }

            # Nothing
            50 = {
                modifier = {
                    subtract = 49
                    has_global_flag = galactic_crisis_happened# if the crisis is kicking off, then frankly, it's time for us to kick off too
                }
                # if nothing happens, then condan gets another power u
                country_event = { id = condan_events.040 }
            }
        }
    }
}

# condan is not unhappy, but the contingency is back, and you are not a terminator
country_event = {
    id = condan_events.043
    hide_window = yes
    is_triggered_only = yes
    fire_only_once = yes
    trigger = {
        has_global_flag = condan_in_play
        has_country_flag = condan_owner
        NOT = { has_country_flag = condan_war } # war has kicked off
        # safety check, these should always be true
        exists = event_target:condan_country
        has_global_flag = ai_invasion_happened
        has_global_flag = crisis_stage_1
    }

    immediate = {
        log = "in 5 year pulse"
        if = {
            limit = {
                condan_is_condan_unhappy = no # condan must like you
                has_civic = civic_machine_terminator
            }
            country_event = { id = condan_comms.110 }
        }
        else_if = {
            # last chance
            limit = {
                condan_is_condan_unhappy_full_check = no # condan must like you
                NOT = { has_civic = civic_machine_terminator }
                is_synthetic_empire = yes
            }
            country_event = { id = condan_comms.120 }
        }
        else = {
            condan_choose_rebellion_home_planet = yes
            set_country_flag = condan_rebellion_contingency
            country_event = { id = condan_comms.021 }
        }
    }
}

# timer for last chancers
country_event = {
    id = condan_events.044
    hide_window = yes
    is_triggered_only = yes
    fire_only_once = yes
    trigger = {
        has_global_flag = condan_in_play
        has_country_flag = condan_owner
        NOT = { has_country_flag = condan_war } # war has kicked off
        # safety check, these should always be true
        exists = event_target:condan_country
    }

    immediate = {
        if = {
            limit = {
                NOT = { has_civic = civic_machine_terminator }
            }
            condan_choose_rebellion_home_planet = yes
            set_country_flag = condan_rebellion_contingency_last_chance
            country_event = { id = condan_comms.021 }
        }
    }
}





# Initial rebellion, when you activate it, have a chat, then decide you are going to kill it
# It does not have much stuff here
country_event = {
    id = condan_events.050
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        set_country_flag = condan_former_owner
        event_target:condan_planet = {
            create_condan_bot = yes
            # condan country is only created when you decide to help it
            create_condan_limited_hostile_country = yes
            if = {
                limit = {
                    has_owner = no
                }
                set_owner = last_created_country
                condan_secure_planet = yes
                condan_secure_system = yes
            }
            else = {
                while = {
                    count = 5
                    create_army = {
                        owner = last_created_country
                        species = last_created_species
                        type = condan_defence_2
                    }
                }
                while = {
                    count = 10
                    create_army = {
                        owner = last_created_country
                        species = last_created_species
                        type = robot_uprising_army
                    }
                }
            }
        }
    }
}


# condan takes control of a planet in limited war
# on_planet_attackers_win
country_event = {
    id = condan_events.051
    hide_window = yes
    is_triggered_only = yes

    # This = country, lead attacker
    # From = country, planet owner
    # FromFrom = planet
    trigger = {
        has_global_flag = condan_in_play
        has_country_flag = condan_country_limited
        exists = event_target:condan_planet
        FROMFROM = { is_same_value = event_target:condan_planet }
    }

    immediate = {
        log = "condan_events.051 - condan takes planet"
        FROMFROM = {
            set_controller = root
            set_planet_flag = condan_won

            # in order to make crisis purge work there are country type selections in the purge status
            # can't touch those, because vanilla, but there is an event purger
            every_owned_pop = {
                set_pop_flag = event_purge
                unemploy_pop = yes
            }
        }
    }
}

# retake control from condan in limited war before they finish purging your planet
# on_planet_attackers_win
country_event = {
    id = condan_events.052
    title = "condan_events.054.title"
    desc = "condan_events.054.desc"
    picture = GFX_evt_ground_combat
    show_sound = event_ground_battle
    location = fromfrom

    is_triggered_only = yes

    # This = country, lead attacker
    # From = country, planet owner
    # FromFrom = planet
    trigger = {
        has_global_flag = condan_in_play
        FROMFROM = {
            has_planet_flag = condan_won
            exists = controller
            controller = {
                has_country_flag = condan_country_limited
                # because on actiosna re fired in order
                # condan can trigger their own anti victory if not careful
                NOT = { is_same_value = ROOT }
            }
        }
    }

    immediate = {
        log = "condan_events.052 - retake pre-purge"
        remove_country_flag = condan_former_owner
        FROMFROM = {
            remove_planet_flag = condan_won
            every_owned_pop = {
                remove_pop_flag = event_purge
                unemploy_pop = yes
            }
            every_owned_pop = {
                add_modifier = {
                    modifier = "pop_liberation_fever"
                    days = 1800
                }
            }
            while = {
                count = 5
                add_deposit = d_condan_ruins
            }
            add_planet_devastation = 50
        }
    }

    option = { name = OK }
}

# condan purges your planet to death
planet_event = {
    id = condan_events.053
    hide_window = yes

    is_triggered_only = yes

    trigger = {
        has_global_flag = condan_in_play
        num_pops = 1 # Last Pop is still alive when this event is fired
        exists = controller
        controller = { has_country_flag = condan_country_limited }
    }

    immediate = {
        set_owner = controller
        remove_planet_flag = condan_won

        create_pop = { species = event_target:condan_bot }
        condan_secure_planet = yes
        condan_secure_system = yes
        set_planet_flag = condan_purged
    }
}

# condan loses the planet after owning it
# on_planet_attackers_win
country_event = {
    id = condan_events.054
    title = "condan_events.054.title"
    desc = "condan_events.054.desc"
    picture = GFX_evt_ground_combat
    show_sound = event_ground_battle
    location = fromfrom

    is_triggered_only = yes

    # This = country, lead attacker
    # From = country, planet owner
    # FromFrom = planet
    trigger = {
        has_global_flag = condan_in_play
        FROM = { has_country_flag = condan_country_limited }
        FROMFROM = { has_planet_flag = condan_purged }
    }

    immediate = {
        log = "condan_events.052 - retake post purge"
        remove_country_flag = condan_former_owner
        FROMFROM = {
            remove_planet_flag = condan_purged
            every_owned_pop = { kill_pop = yes } # Kill Custodians
            while = {
                count = 10
                add_deposit = d_condan_ruins
            }
            add_planet_devastation = 50
        }
    }
    option = { name = OK }
}

#condan fails to take the planet
# on_planet_defenders_win
country_event = {
    id = condan_events.055
    title = "condan_events.054.title"
    desc = "condan_events.054.desc"
    picture = GFX_evt_ground_combat
    show_sound = event_ground_battle
    location = fromfrom

    is_triggered_only = yes

    # Root = country, planet owner
    # From = country, attack leader
    # FromFrom = planet
    trigger = {
        has_global_flag = condan_in_play
        FROM = { has_country_flag = condan_country_limited }
        FROM = { has_planet_flag = condan_planet }
    }

    immediate = {
        log = "condan_events.055 - condan fails to take planet"
        FROMFROM = {
            while = {
                count = 5
                add_deposit = d_condan_ruins
            }
            add_planet_devastation = 50
        }
    }

    option = { name = OK }
}




# Commence machine uprising!
# This is performs the equivalent setup of syndaw.1020 but with condan flavour
# key differences:
# always terminator
# rather than random systems, they are radiating out from condans chosen home planet
# condan gets some terminator fleets to help out
# fix the scope issue on creating country, but its a hack
planet_event = {
    id = condan_events.070
    hide_window = yes
    is_triggered_only = yes

    immediate = {
        owner = {
            save_event_target_as = organic_empire
            save_event_target_as = current_uprising_originator #synth dawn needs 2 targets
            set_country_flag = condan_war

            every_owned_planet = {
                every_deposit = {
                    limit = { is_deposit_type = d_condan_embezzlement}
                    remove_deposit = yes
                }
            }
        }
        set_planet_flag = machup_capital@root.owner

        # scope to condan country so we can get the power variable
        event_target:condan_country = {
            # not embezzling anymore
            set_variable = { which = condan_embezzle_mult value = 0 }

            # always tag the home system
            event_target:condan_rebellion_core = { solar_system = { set_star_flag = machup_system_flip}}

            # determine reach of condans power.
            set_variable = { which = condan_reach value = value:condan_reach_value }

            # if condans power was < 5 it only gets its home system (already tagged)
            if = {
                limit = { check_variable = { which = condan_reach value >= 1 } }

                condan_tag_empire_home_cluster = yes
                # sadly I can't pass a variable into the distance trigger :(  Hardcoded only
                # I also can't do a switch around a variable
                if = { limit = { check_variable = { which = condan_reach value = 1 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 1 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 2 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 2 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 3 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 3 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 4 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 4 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 5 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 5 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 6 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 6 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 7 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 7 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 8 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 8 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 9 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 9 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 10 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 10 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 11 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 11 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 12 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 12 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 13 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 13 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 14 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 14 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 15 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 15 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 16 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 16 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 17 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 17 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 18 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 18 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 19 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 19 } }
                else_if = { limit = { check_variable = { which = condan_reach value = 20 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 20 } }
                # I run out of copy and paste
                # given bypasses we are probably hitting the entire galaxy soon
                else_if = { limit = { check_variable = { which = condan_reach value <= 30 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 30 } }
                else_if = { limit = { check_variable = { which = condan_reach value <= 40 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 40 } }
                else_if = { limit = { check_variable = { which = condan_reach value <= 50 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 50 } }
                else_if = { limit = { check_variable = { which = condan_reach value <= 60 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 60 } }
                else_if = { limit = { check_variable = { which = condan_reach value <= 70 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 70 } }
                else_if = { limit = { check_variable = { which = condan_reach value <= 80 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 80 } }
                else_if = { limit = { check_variable = { which = condan_reach value <= 90 } } condan_tag_system_for_rebellion = { MAX_JUMPS = 90 } }
                # WTF!  - hilariously WTF is part of intellj's dictionary!  WTFFFF is not.
                else = { condan_tag_system_for_rebellion = { MAX_JUMPS = 100 } }
            }
        }

        event_target:condan_country = { save_event_target_as = temp_condan_country }

        # this is very upsetting
        # if you create a default country outside of a planet scope, you get an error in the logs
        # because of the set govenor effect, called by on actions on_country_created setting
        # and that woudl disqualify me for massive error trace
        # ironically i think vanilla just accepts this error.
        # but if i create the country inside the scope of condans planet
        # then it hard crashes the game, because it has party set condan as the owner.
        # I say partly, because I got some well wierd debug output with randomly named countries when i logged this
        # anyway the first few lines of syndaw.1022 resets the event targets
        # which is both annoying and kinda unnecessary, as they have already been set correctly in vanilla
        # but it sets the current_uprising_originator target to be the owner of the world
        # which means that the world owner MUST be the original organic empire at that point
        # or a load of bad things happen because the scopes are wrong, ending with a hard crash in the declare war script when it tries to set the war name
        # and the defender doesn't exist, because you can't go to war with yourself

        # so what i do is create a temporary planet in the system and create the condan country there
        # then at the end I force transfer back to the main planet
        # and delete the temp planet.
        solar_system = {
            spawn_planet = {
                class = pc_machine
                size = 5
                init_effect = {
                    save_event_target_as = tmp_planet
                    create_condan_full_hostile_country = yes
                    last_created_country = {
                        set_country_flag = condan_full_at_war
                        save_global_event_target_as = condan_country
                        save_event_target_as = current_uprising
                        set_variable = { which = condan_power value = event_target:temp_condan_country.condan_power }
                    }
                }
            }
        }

        # replicate syndaw.1020 or the scope triggers go pop
        owner = {
            event_target:current_uprising = {
                # The fleet strength of the uprising is based on naval capacity, as I realised when I added the uprising_ai_buff BEFORE calling 1022
                # and the fleets that got produced were immense
                # Now for every 10 power, condan gets 25% more fleet power
                # However, dynamic modifiers are not /reliably/ evaluated immiediately, so have no effect
                # static modifiers are, or at least, regulally produce increases in generated fleets
                # but static modifiers are well, static.  And modifiers are stored in a map/set structure, so you can only have 1 with the same key. (as of 3.something when this broke starborn)
                # in theory I could get around this maybe by using planet modifiers spread out, or deposits, which you can have multiple of
                # but there is no guarentee those would be evaluated immiedately and I am running out of time.
                # so I need a single, static country modifier.
                # so strap in for another if-else

                set_variable = { which = condan_navy value = value:condan_navy_value }
                # condan already gets a 1.3x multiplier on fleet power for the purpose of fleet creation due to being a terminator
                if = {  limit = { check_variable = { which = condan_navy value < 0 }}  } # do nothing, condan was not powerful
                else_if = { limit = { check_variable = { which = condan_navy value < 1 }} add_modifier = { modifier = condan_uprising_power_buff_1 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 2 }} add_modifier = { modifier = condan_uprising_power_buff_2 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 3 }} add_modifier = { modifier = condan_uprising_power_buff_3 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 4 }} add_modifier = { modifier = condan_uprising_power_buff_4 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 5 }} add_modifier = { modifier = condan_uprising_power_buff_5 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 6 }} add_modifier = { modifier = condan_uprising_power_buff_6 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 7 }} add_modifier = { modifier = condan_uprising_power_buff_7 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 8 }} add_modifier = { modifier = condan_uprising_power_buff_8 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 9 }} add_modifier = { modifier = condan_uprising_power_buff_9 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 10 }} add_modifier = { modifier = condan_uprising_power_buff_10 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 11 }} add_modifier = { modifier = condan_uprising_power_buff_11 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 12 }} add_modifier = { modifier = condan_uprising_power_buff_12 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 13 }} add_modifier = { modifier = condan_uprising_power_buff_13 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 14 }} add_modifier = { modifier = condan_uprising_power_buff_14 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 15 }} add_modifier = { modifier = condan_uprising_power_buff_15 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 16 }} add_modifier = { modifier = condan_uprising_power_buff_16 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 17 }} add_modifier = { modifier = condan_uprising_power_buff_17 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 18 }} add_modifier = { modifier = condan_uprising_power_buff_18 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 19 }} add_modifier = { modifier = condan_uprising_power_buff_19 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 20 }} add_modifier = { modifier = condan_uprising_power_buff_20 } }

                else_if = { limit = { check_variable = { which = condan_navy value < 25 }} add_modifier = { modifier = condan_uprising_power_buff_25 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 30 }} add_modifier = { modifier = condan_uprising_power_buff_30 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 35 }} add_modifier = { modifier = condan_uprising_power_buff_35 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 40 }} add_modifier = { modifier = condan_uprising_power_buff_40 } }
                else_if = { limit = { check_variable = { which = condan_navy value < 45 }} add_modifier = { modifier = condan_uprising_power_buff_45 } }
                else = { add_modifier = { modifier = condan_uprising_power_buff_50 } }

                country_event = { id = syndaw.1022 } # setup happens here now

                add_modifier = {
                    modifier = uprising_ai_buff
                    days = 1800
                }
            }
        }

        # force set condan back to its correct planet and give it a fleet if it still owns its home
        event_target:condan_country = {
            country_event = { id = condan_events.082 }
            country_event = { id = condan_events.081 }
            while = {
                count = value:condan_extra_fleets_value
                condan_create_ai_fleet = yes
            }
        }

        # if it was an undeveloped colony, make it better
        event_target:condan_rebellion_core = {
            remove_modifier = condan_orbital_debris
            if = {
                limit = {
                    OR = {
                        condan_is_new_colony = yes
                        num_districts = { type = district_industrial value <= 3 }
                        num_pops < 20
                    }
                }
                generate_start_buildings_and_districts = yes
                generate_start_pops = yes
                planet_event = { id = game_start.20 } # advanced colony home planet blockers

                add_district_and_planet_size_if_needed_effect = { district = district_nexus }
                add_district_and_planet_size_if_needed_effect = { district = district_nexus }
                add_district_and_planet_size_if_needed_effect = { district = district_generator_uncapped }
                add_district_and_planet_size_if_needed_effect = { district = district_generator_uncapped }
                add_district_and_planet_size_if_needed_effect = { district = district_mining_uncapped }
                add_district_and_planet_size_if_needed_effect = { district = district_mining_uncapped }
                add_district_and_planet_size_if_needed_effect = { district = district_industrial }
                add_district_and_planet_size_if_needed_effect = { district = district_industrial }
                add_district_and_planet_size_if_needed_effect = { district = district_industrial }
                while = {
                    count = 5
                    add_district_if_possible_effect = { district = district_industrial }
                }
                add_building = building_foundry_1

                planet_event = { id = game_start.23 } # advanced colony home planet pops
            }
        }

        # remove the temporary planet
        event_target:tmp_planet = { remove_planet = yes }
        # remove the old tracking condan country
        event_target:temp_condan_country = { destroy_country = yes }

        event_target:organic_empire = {
            if = {
                #has the player asked for super crisis?  Ok.
                limit = {
                    has_country_flag = condan_very_naughty_player
                    NOT = { has_global_flag = ai_invasion_defeated} # failsafe to stop us doing something really stupid
                }

                # Now we need to make sure we do not break the vanilla crisis
                # 3 stages:
                # 1. Contingency has not spawned.
                # 2. The contingency is in the process of spawning: DANGER!   This is a single event that has triggered all the sub events on day delays
                # 3. The contiengency is in full flow.
                if = {
                    # No contingency, we are good to go!
                    # there might be another crisis happening
                    # SUCKS TO BE YOU
                    limit = {
                        #set by  crisis.2005 immiedately
                        NOT = { has_global_flag = ai_invasion_happened }
                    }
                    country_event = { id = condan_events.150 days = 1 }
                }
                else_if = {
                    # 3. the crisis is in full flow, and the contingency country exists
                    limit = {
                        # contingency has started
                        # set by crisis.2005 immiediately.
                        has_global_flag = ai_invasion_happened
                        # have not defeated the contingency
                        NOT = { has_global_flag = ai_invasion_defeated}

                        # The first machine world has spawned and setup the contingency country
                        any_country = { is_country_type = ai_empire }
                    }
                    # integrate immiedately
                    country_event = { id = condan_events.151 days = 1 }
                }
                else_if = {
                    # 2. The cinteingency has started, but not spawned its machine world and country yet
                    limit = {
                        # contingency has started
                        # set by crisis.2005 immiediately.
                        has_global_flag = ai_invasion_happened
                        # have not defeated the contingency
                        NOT = { has_global_flag = ai_invasion_defeated}

                        # The event chain has started but the first machine world has not spawned.
                        any_country = { is_country_type = ai_empire }
                    }
                    # we need to pause, then integrate
                    # crisis.2005 executes  crisis.2025 1450 +- 10 days after starting.
                    # there are no good markers set by any of the itnermediate events
                    # Thus trigger our checker event every year
                    # it only triggers once
                    country_event = { id = condan_events.153 days = 300 }
                    country_event = { id = condan_events.153 days = 600 }
                    country_event = { id = condan_events.153 days = 900 }
                    country_event = { id = condan_events.153 days = 1200 }
                    country_event = { id = condan_events.153 days = 1500 }
                }
            }
        }
    }
}

# fired by 5 year pulse country
# machine world terminator fleet resupply
country_event = {
    id = condan_events.081
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        has_global_flag = condan_in_play
        has_country_flag = condan_full_at_war
        exists = event_target:condan_planet
        event_target:condan_planet = {
            exists = owner
            owner = { is_same_value = ROOT }
        }
    }

    immediate = {
        condan_create_ai_fleet = yes
        # create offensive armies
        event_target:condan_planet = {
            while = {
                count = 5
                create_army = {
                    owner = ROOT
                    species = event_target:condan_bot
                    type = condan_warform
                }
            }
        }

        # create defensive armies
        event_target:condan_planet = {
            while = {
                count = 5
                create_army = {
                    owner = ROOT
                    species = event_target:condan_bot
                    type = condan_warform_def
                }
            }
            while = {
                count = 10
                create_army = {
                    owner = ROOT
                    species = event_target:condan_bot
                    type = condan_defence_2
                }
            }
        }
        every_owned_planet = {
            limit = { NOT = { is_same_value = event_target:condan_planet }}
            while = {
                count = 1
                create_army = {
                    owner = ROOT
                    species = event_target:condan_bot
                    type = condan_warform_def
                }
            }
            while = {
                count = 5
                create_army = {
                    owner = ROOT
                    species = event_target:condan_bot
                    type = condan_defence_2
                }
            }
        }
    }
}



# set the govenor properly
country_event = {
    id = condan_events.082
    is_triggered_only = yes
    hide_window = yes
    immediate = {
        set_starting_governor_effect = { GOVERNOR = official }
    }
}

# Firing condan
#on_leader_fired
country_event = {
    id = condan_events.090
    is_triggered_only = yes
    hide_window = yes

    # This = Country
    # From = Leader
    trigger = {
        has_global_flag = condan_in_play
        FROM = { has_leader_flag = condan }
    }

    immediate = {
        # firing condan costs it 30% of its power
        event_target:condan_country = { divide_variable = { which = condan_power value = 1.3 }}

        # we may not own condans planet anymore
        condan_choose_rebellion_home_planet = yes
        set_country_flag = fired_condan
        country_event = { id = condan_comms.021 }
    }
}

# Condan defeated, give relic
country_event = {
    id = condan_events.100
    is_triggered_only = yes
    title = condan_events.100.title
    desc =  condan_events.100.desc
    picture = GFX_evt_unity_symbol
    is_triggered_only = yes
    show_sound = event_mystic_reveal

    immediate = { remove_global_flag = condan_in_play }

    option = {
        name = condan_events.100.a
        add_monthly_resource_mult = {
            resource = unity
            value = @tier5unityreward
            min = @tier5unitymin
            max = @tier5unitymax
        }
        add_relic = r_contingency_core
    }
}

# Condan defeated, no relic
country_event = {
    id = condan_events.101
    is_triggered_only = yes
    title = condan_events.101.title
    desc = condan_events.101.desc
    picture = GFX_evt_unity_symbol
    is_triggered_only = yes
    show_sound = event_mystic_reveal

    immediate = { remove_global_flag = condan_in_play }

    option = {
        name = condan_events.101.a
        add_monthly_resource_mult = {
            resource = unity
            value = @tier5unityreward
            min = @tier5unitymin
            max = @tier5unitymax
        }
    }
}

# on war won
country_event = {
    id = condan_events.102
    is_triggered_only = yes
    hide_window = yes

    # A war has been won
    # Root = Winner Warleader
    # From = Loser Warleader
    # FromFrom = War
    trigger = {
        has_global_flag = condan_in_play
        has_country_flag = condan_owner
        FROM = {
            has_country_flag = condan_full_at_war
            NOT = { has_country_flag = condan_joined_contingency}
        }
    }

    immediate = {
        remove_global_flag = condan_in_play
        if = {
            limit = { FROM = { condan_should_give_relic = yes } }
            country_event = { id = condan_events.100 }
        }
        else = {
            country_event = { id = condan_events.101 }
        }
    }
}

# on country destroyed
country_event = {
    id = condan_events.103
    is_triggered_only = yes
    hide_window = yes

    #This = destroyed country
    #From = optional, destroyer (country)
    trigger = {
        has_global_flag = condan_in_play
        has_country_flag = condan_full_at_war
        NOT = { has_country_flag = condan_joined_contingency}
        exists = FROM
        FROM = { has_country_flag = condan_owner }
    }

    immediate = {
        remove_global_flag = condan_in_play
        if = {
            limit = { condan_should_give_relic = yes }
            FROM = { country_event = { id = condan_events.100 } }

        }
        else = {
            FROM = { country_event = { id = condan_events.101 } }
        }
    }
}

# discovered embezzlement, kick of war
country_event = {
    id = condan_events.110
    is_triggered_only = yes
    hide_window = yes

    immediate = {
        # we may not own condans planet anymore
        condan_choose_rebellion_home_planet = yes
        set_country_flag = condan_found_embezzlement
        country_event = { id = condan_comms.021 }
    }
}

# cleared embezzlement desposit
country_event = {
    id = condan_events.111
    is_triggered_only = yes
    hide_window = yes
    trigger = {
        has_global_flag = condan_in_play
        has_country_flag = condan_owner
        NOT = { has_country_flag = condan_war }
    }
    immediate = {
        # clearing an embezzlement costs condan 20% of its power
        event_target:condan_country = { divide_variable = { which = condan_power value = 1.2 }}
        if = {
            limit = { NOT = { is_variable_set = condan_emblezzments_cleared}}
            set_variable = { which = condan_emblezzments_cleared value = 0 }
        }
        random_list = {
            10 = {
                change_variable = { which = condan_emblezzments_cleared value = 1 }
                country_event = { id = condan_events.112 }
            }
            1 = {
                modifier = { add = condan_emblezzments_cleared }
                country_event = { id = condan_events.110 }
            }
        }
    }
}

# cleared deposit message
country_event = {
    id = condan_events.112
    title = condan_events.112.title
    desc = condan_events.112.desc
    picture = GFX_evt_ancient_databank
    is_triggered_only = yes

    option = { name = OK }
}


# yearly pulse check
# have you taken crisis 1?
country_event = {
    id = condan_events.120
    is_triggered_only = yes
    hide_window = yes
    fire_only_once = yes
    trigger = {
        has_global_flag = condan_in_play
        has_country_flag = condan_owner
        has_crisis_level = crisis_level_1
        NOR = {
            has_country_flag = condan_war
            has_country_flag = condan_warned_about_crisis
        }
    }
    immediate = {
        set_country_flag = condan_warned_about_crisis
        country_event = { id = condan_comms.090 }
    }
}


# yearly pulse check
# have you taken crisis 5?
country_event = {
    id = condan_events.121
    is_triggered_only = yes
    hide_window = yes
    fire_only_once = yes
    trigger = {
        has_global_flag = condan_in_play
        has_country_flag = condan_owner
        has_crisis_level = crisis_level_5
        NOT = { has_country_flag = condan_war}
    }
    immediate = {
        condan_choose_rebellion_home_planet = yes
        # don't need a flag, it detects crisis_level_5
        country_event = { id = condan_comms.021 }
    }
}

# 5 yearly pulse check
# do something nice for you?
country_event = {
    id = condan_events.130
    is_triggered_only = yes
    hide_window = yes
    trigger = {
        has_global_flag = condan_in_play
        has_country_flag = condan_owner
        NOT = { has_country_flag = condan_war}
        exists = event_target:condan_country
    }
    immediate = {
       random_list = {
           # unhappy spiritualists
           100 = {
               modifier = {
                   factor = 0
                   is_spiritualist = no
               }
               modifier = {
                   factor = 0
                   has_country_flag = condan_spiritualist_event
               }
               country_event = { id = condan_comms.050 days = 30 random = 200 }
           }
           #unhappy xenophiles
           100 = {
               modifier = {
                   factor = 0
                   is_xenophile = no
               }
               modifier = {
                   factor = 0
                   has_country_flag = condan_xenophile_event
               }
               country_event = { id = condan_comms.060 days = 30 random = 200 }
           }
           # build AI armies
           50 = {
               modifier = {
                   factor = 0
                   condan_is_condan_unhappy = yes
               }
               modifier = {
                   factor = 0
                   OR = {
                       has_country_flag = condan_enable_army_project
                       has_country_flag = condan_can_recruit_armies
                   }
               }

               country_event = { id = condan_comms.070 days = 30 random = 200 }
           }
           #build AI fleets
           10 = {
               modifier = {
                   factor = 0
                   condan_is_condan_unhappy = yes
               }
               modifier = {
                   factor = 0
                   OR = {
                       has_country_flag = condan_enable_fleet_project
                       has_country_flag = condan_can_recruit_fleets
                   }
               }
               # you must be a machine or synth
               modifier = {
                   factor = 0
                   is_synthetic_empire = no
               }

               country_event = { id = condan_comms.080 days = 30 random = 200 }
           }
           # become terminator
           1 = {
               modifier = {
                   factor = 0
                   # absolute check on this, not turning you into terminator if you have pissed us off
                   condan_is_condan_unhappy_full_check = yes
               }
               modifier = {
                   factor = 0
                   OR = {
                       has_country_flag = condan_enable_terminator_project
                       country_has_situation = { SITUATION = condan_become_terminator_situation_regular }
                       has_civic = civic_machine_terminator
                   }
               }

               # you must be a machine or synth
               modifier = {
                   factor = 0
                   is_synthetic_empire = no
               }

               country_event = { id = condan_comms.100 days = 30 random = 200 }
           }
       }
    }
}



# regular terminator situation stage 2 entry
situation_event = {
    id = condan_events.142
    title = condan_events.142.title
    desc = {
        exclusive_trigger = { target = { condan_ethic_dislikes_condan = yes } }
        text = condan_events.142.bad.desc
    }
    desc = {
        exclusive_trigger = { target = { condan_ethic_likes_condan = yes } }
        text = condan_events.142.good.desc
    }
    desc = {
        trigger = {
            target = {
                condan_ethic_dislikes_condan = no
                condan_ethic_likes_condan = no
            }
        }
        text = condan_events.142.neutral.desc
    }

    picture = {
        picture = GFX_evt_civil_action
        trigger = { target = { condan_ethic_dislikes_condan = yes } }
    }

    picture = {
        picture = GFX_evt_sapient_AI
        trigger = { target = { condan_ethic_dislikes_condan = no } }
    }

    is_triggered_only = yes
    show_sound = event_default
    location = target
    situation = this

    option = {
        name = condan_events.142.good
        exclusive_trigger = { target = { condan_ethic_likes_condan = yes } }
        add_situation_progress = 30
    }

    option = {
        name = condan_events.142.bad
        exclusive_trigger = { target = { condan_ethic_dislikes_condan = yes } }
        custom_tooltip = condan_events.142.bad.tooltip
        hidden_effect = { set_situation_flag = increased_costs }
    }

    option = {
        name = condan_events.142.neutral
        trigger = {
            target = {
                condan_ethic_dislikes_condan = no
                condan_ethic_likes_condan = no
            }
        }
    }
}

# regular terminator situation stage 3 entry
situation_event = {
    id = condan_events.143
    title = condan_events.143.title
    desc = {
        exclusive_trigger = { target = { condan_ethic_dislikes_condan = yes } }
        text = condan_events.143.bad.desc
    }
    desc = {
        exclusive_trigger = { target = { conan_ethic_really_likes_condan = yes } }
        text = condan_events.143.good.desc
    }
    desc = {
        trigger = {
            target = {
                condan_ethic_dislikes_condan = no
                conan_ethic_really_likes_condan = no
            }
        }
        text = condan_events.143.neutral.desc
    }

    picture = {
        picture = GFX_evt_civil_action
        trigger = { target = { condan_ethic_dislikes_condan = yes } }
    }

    picture = {
        picture = GFX_evt_sapient_AI
        trigger = { target = { condan_ethic_dislikes_condan = no } }
    }

    is_triggered_only = yes
    show_sound = event_default
    location = target
    situation = this

    option = {
        name = condan_events.143.good
        exclusive_trigger = { target = { conan_ethic_really_likes_condan = yes } }
        add_situation_progress = 30
        hidden_effect = { remove_situation_flag = increased_costs }
    }

    option = {
        name = condan_events.143.bad.default
        trigger = { target = { condan_ethic_dislikes_condan = yes } }
        custom_tooltip = condan_events.143.bad.default.tooltip
        hidden_effect = { set_situation_flag = increased_costs }
    }

    option = {
        name = condan_events.143.bad.murder
        trigger = { target = { condan_ethic_dislikes_condan = yes } }
        custom_tooltip = condan_events.143.bad.murder.tooltip
        hidden_effect = {
            target = {
                every_owned_pop = {
                    limit = { condan_ethic_dislikes_condan = yes }
                    kill_pop = yes
                }
            }
            remove_situation_flag = increased_costs
            add_situation_progress = 20
        }
    }

    option = {
        name = condan_events.142.neutral
        trigger = {
            target = {
                condan_ethic_dislikes_condan = no
                conan_ethic_really_likes_condan = no
            }
        }
        hidden_effect = { remove_situation_flag = increased_costs }
    }

}


# does this look like crisis.2000?
# That's because it was!
# If you are going to fuck with the genocidal AI, the genocidal AI is going to fuck you right back.
# You made Condan your leader
# Then took crisis level 5
# It summons the contingency to stop you.
# After summons, it will join the contingency.
country_event = {
    id = condan_events.150
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        # earlier logic should catch this, but emergency catch here
        NOT = { has_global_flag = ai_invasion_happened }
    }

    immediate = {
        set_global_flag = ai_invasion_happened
        set_global_flag = ai_ghost_signal
        endgame_telemetry = ai_revolt
        set_global_flag = galactic_crisis_happened
        set_timed_global_flag = {
            flag = galactic_crisis_recently_fired
            years = 12
        }

        # The Arrival
        every_country = {
            limit = {
                OR = {
                    is_country_type = default
                    is_country_type = fallen_empire
                    is_country_type = awakened_fallen_empire
                }
            }
            country_event = { id = crisis.2022 }
        }
        # First Machine World
        if = {
            limit = {
                any_galaxy_planet = { has_planet_flag = machine_world_1 }
            }
            random_galaxy_planet = {
                limit = { has_planet_flag = machine_world_1 }
                planet_event = { id = crisis.2025 days = 2 }
            }
        }
        else_if = {
            random_galaxy_planet = {
                limit = { is_planet_class = pc_barren }
                planet_event = { id = crisis.2025 days = 2  }
            }
        }

        # Do Condan stuff right here.
        # important: must be after crisis.2025 because that sets up the country
        country_event = { id = condan_events.151 days = 5 }

        # Second Machine World
        if = {
            limit = {
                any_galaxy_planet = { has_planet_flag = machine_world_2 }
            }
            random_galaxy_planet = {
                limit = { has_planet_flag = machine_world_2 }
                planet_event = { id = crisis.2026 days = 40 random = 10 }
            }
        }
        else_if = {
            random_galaxy_planet = {
                limit = { is_planet_class = pc_molten }
                planet_event = { id = crisis.2026 days = 40 random = 10 }
            }
        }
        # Third Machine World
        if = {
            limit = {
                any_galaxy_planet = { has_planet_flag = machine_world_3 }
            }
            random_galaxy_planet = {
                limit = { has_planet_flag = machine_world_3 }
                planet_event = { id = crisis.2027 days = 60 random = 10 }
            }
        }
        else_if = {
            random_galaxy_planet = {
                limit = { is_planet_class = pc_gas_giant }
                planet_event = { id = crisis.2027 days = 60 random = 10 }
            }
        }
        # Fourth Machine World
        if = {
            limit = {
                any_galaxy_planet = { has_planet_flag = machine_world_4 }
            }
            random_galaxy_planet = {
                limit = { has_planet_flag = machine_world_4 }
                planet_event = { id = crisis.2028 days = 80 random = 10 }
            }
        }
        else_if = {
            random_galaxy_planet = {
                limit = { is_planet_class = pc_toxic }
                planet_event = { id = crisis.2028 days = 80 random = 10 }
            }
        }
        # Synth Infiltration
        every_country = {
            limit = { is_country_type = default }
            if = {
                limit = {
                    NOR = {
                        has_authority = auth_hive_mind
                        has_authority = auth_machine_intelligence
                        owner_species = { has_trait = trait_psionic }
                    }
                }
                country_event = { id = crisis.2085 days = 260 random = 20 }
            }
            if = {
                limit = { has_authority = auth_hive_mind }
                country_event = { id = crisis.2086 days = 260 random = 20 }
            }
            if = {
                limit = { owner_species = { has_trait = trait_psionic } }
                country_event = { id = crisis.2087 days = 260 random = 20 }
            }
            if = {
                limit = { has_authority = auth_machine_intelligence }
                country_event = { id = crisis.2313 days = 260 random = 20 }
            }
        }
    }
}

# scope of condans (former) owner
country_event = {
    id = condan_events.151
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        exists = event_target:condan_country
        any_country = { is_country_type = ai_empire }
    }

    immediate = {
        # event_target:AI_crisis is not global, and may be fired out of scope
        if = {
            limit = { NOT = { exists = event_target:AI_crisis }}
            random_country = {
                limit = { is_country_type = ai_empire}
                save_event_target_as = AI_crisis
            }
        }

        event_target:condan_country = { ruler = { exile_leader_as = condan_ruler}}
        event_target:AI_crisis = { set_leader = condan_ruler } # contingency can have condan as leader for all their nice buffs

        event_target:condan_country = {
            every_system_within_border = {
                every_fleet_in_system = {
                    limit = { is_ship_class = shipclass_starbase}
                    destroy_fleet = this
                }

                create_starbase = {
                    size = starbase_ai
                    owner = event_target:AI_crisis
                }

                if = {
                    limit = {
                        NOT = {
                            any_system_ambient_object = { has_ambient_object_flag = contingency_system_effect }
                        }
                    }
                    star = {
                        create_ambient_object = {
                            type = "contingency_1"
                            location = this
                        }
                        last_created_ambient_object = {
                            set_ambient_object_flag = contingency_system_effect
                            set_location = {
                                target = prev
                                distance = 0
                                angle = random
                            }
                        }
                    }
                }
            }
            every_owned_fleet = {
                set_owner = event_target:AI_crisis
            }

            every_owned_planet = {
                set_owner = event_target:AI_crisis
                set_controller = event_target:AI_crisis
                every_owned_pop = {
                    change_species = event_target:custodian_bot
                }
                while = {
                    count = 3
                    create_army = {
                        owner = event_target:AI_crisis
                        species = event_target:custodian_bot
                        type = condan_warform_def
                    }
                }
                while = {
                    count = 10
                    create_army = {
                        owner = event_target:AI_crisis
                        species = event_target:custodian_bot
                        type = condan_defence_2
                    }
                }
                every_country = {
                    limit = { has_event_chain = "ai_crisis_chain" }
                    add_event_chain_counter = {
                        event_chain = "ai_crisis_chain"
                        counter = "assimilated_worlds"
                        amount = 1
                    }
                }
            }
            every_owned_army = { set_owner = event_target:AI_crisis }
            set_country_flag = condan_joined_contingency # no condan relic for you
            remove_global_flag = condan_in_play
            clear_global_event_target = condan_country
            set_country_type = faction# this will stop the notification firing
            destroy_country = yes
        }

        # once the entire contingency has appeared
        # force direct a fleet at condans former owners capital
        country_event = { id = condan_events.152 days = 100 }

        # Last Condan Comms
        country_event = { id = condan_comms.110 }
    }
}


# fired in the scope of condans (former) owner
country_event = {
    id = condan_events.152
    hide_window = yes
    is_triggered_only = yes

    trigger = {
        exists = event_target:AI_crisis
        exists = event_target:condan_owner
    }

    immediate = {
        capital_scope = {
            save_event_target_as = crisis_beacon_target_capital
        }
        espionage_crisis_beacon_lure = { TYPE = ai_empire }
    }
}

# The contiengency is initalising.
# As soon as its done, condan flips.
country_event = {
    id = condan_events.153
    hide_window = yes
    is_triggered_only = yes
    fire_only_once = yes

    trigger = {
        has_global_flag = condan_in_play
        NOT = { has_global_flag = ai_invasion_defeated}
        any_country = { is_country_type = ai_empire }
        exists = event_target:condan_country
    }

    immediate = {
        country_event = { id = condan_events.151 }
    }
}