# Given a species, create a mod with trait_cybernetic and apply to all pops, leaders
# and armies that have the original species and the same owner as the scope object.
# Scope: Something that has a species and an owner
# create_cybernetic_species_mod = {
# 	species = {
# 		modify_species = {
# 			remove_trait = trait_latent_psionic
# 			remove_trait = trait_psionic
# 			effect = {
# 				create_species = {
# 					is_mod = yes
# 					name = this
# 					plural = this
# 					class = this
# 					portrait = this
# 					traits = this
# 					can_be_modified = this
# 					homeworld = this
# 					namelist = this
# 					gender = this
# 					traits = {
# 						ideal_planet_class = this
# 						trait = trait_cybernetic
# 					}
# 				}
# 			}
# 		}
# 		save_event_target_as = changing_species
# 	}

# 	owner = {
# 		every_owned_pop_group = {
# 			limit = { is_exact_same_species = event_target:changing_species }
# 			change_species = last_created_species
# 		}
# 		every_owned_leader = {
# 			limit = { is_exact_same_species = event_target:changing_species }
# 			change_species = last_created_species
# 		}
# 		every_pool_leader = {
# 			limit = { is_exact_same_species = event_target:changing_species }
# 			change_species = last_created_species
# 		}
# 		every_envoy = {
# 			limit = { is_exact_same_species = event_target:changing_species }
# 			change_species = last_created_species
# 		}
# 		every_owned_army = {
# 			limit = {
# 				exists = species
# 				is_exact_same_species = event_target:changing_species
# 			}
# 			change_species = last_created_species
# 		}
# 		every_controlled_ship = {
# 			limit = {
# 				is_ship_class = shipclass_colonizer
# 				is_exact_same_species = event_target:changing_species
# 			}
# 			change_species = last_created_species
# 		}
# 	}
# }
#
#
# # Leader scope
# update_leader_after_modification = {
#     if = {
#         limit = {
#             NOR = {
#                 has_leader_flag = renowned_leader
#                 has_leader_flag = legendary_leader
#                 has_any_chosen_one_leader_trait = yes
#             }
#         }
#
#         # Remove all applicable leader traits
#         remove_trait = leader_trait_erudite
#         remove_trait = leader_trait_cyborg
#         remove_trait = leader_trait_limited_cyborg
#         remove_trait = leader_trait_psionic
#
#         # Add the correct leader trait based on the species
#         species = {
#             switch = {
#                 trigger = has_trait
#                 trait_erudite = {
#                     prev = {
#                         add_trait = {
#                             trait = leader_trait_erudite
#                             show_message = no
#                         }
#                     }
#                 }
#                 trait_cybernetic = {
#                     prev = {
#                         add_trait = {
#                             trait = leader_trait_cyborg
#                             show_message = no
#                         }
#                     }
#                 }
#                 trait_limited_cybernetic = {
#                     prev = {
#                         add_trait = {
#                             trait = leader_trait_limited_cyborg
#                             show_message = no
#                         }
#                     }
#                 }
#                 trait_psionic = {
#                     prev = {
#                         add_trait = {
#                             trait = leader_trait_psionic
#                             show_message = no
#                         }
#                     }
#                 }
#             }
#         }
#     }
# }
